###############################################################################
#                                                                             #
# IAR ELF Linker V6.40.1.53790/W32 for ARM              31/Jan/2014  18:04:32 #
# Copyright 2007-2012 IAR Systems AB.                                         #
#                                                                             #
#    Output file  =  C:\dev\docs\scottdesign\motor\Debug\Exe\motorTiva.out    #
#    Map file     =  C:\dev\docs\scottdesign\motor\Debug\List\motorTiva.map   #
#    Command line =  C:\dev\docs\scottdesign\motor\Debug\Obj\accel.o          #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\flashio.o        #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\heap_2.o         #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\interpret.o      #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\io.o             #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\list.o           #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\main.o           #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\parseTreeEntry.o #
#                     C:\dev\docs\scottdesign\motor\Debug\Obj\port.o          #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\portasm.o        #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\queue.o          #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\startup_ewarm.o  #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\stepper.o        #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\symbolTableEntry #
#                    .o C:\dev\docs\scottdesign\motor\Debug\Obj\tasks.o       #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\uartstdio.o      #
#                    C:\dev\docs\scottdesign\motor\Debug\Obj\usb_dev_serial.o #
#                     C:\dev\docs\scottdesign\motor\Debug\Obj\usb_serial_stru #
#                    cts.o C:\dev\docs\scottdesign\motor\Debug\Obj\ustdlib.o  #
#                    C:\ti\TivaWare_C_Series-1.0\driverlib\ewarm\Exe\driverli #
#                    b.a C:\ti\TivaWare_C_Series-1.0\usblib\ewarm\Exe\usblib. #
#                    a --redirect _Printf=_PrintfTiny --redirect              #
#                    _Scanf=_ScanfSmall -o C:\dev\docs\scottdesign\motor\Debu #
#                    g\Exe\motorTiva.out --map C:\dev\docs\scottdesign\motor\ #
#                    Debug\List\motorTiva.map --config                        #
#                    C:\dev\docs\scottdesign\motor\motorTiva.icf              #
#                    --diag_remark Lo011,Lo007,Lo009 --semihosting --entry    #
#                    __iar_program_start --vfe --enable_stack_usage           #
#                    --call_graph C:\dev\docs\scottdesign\motor\Debug\List\mo #
#                    torTivaCallGraph.xml                                     #
#                                                                             #
#                                                                             #
###############################################################################

*******************************************************************************
*** RUNTIME MODEL ATTRIBUTES
***

CppFlavor                     = *
__CPP_Language                = EC++
__Heap_Handler                = Basic
__SystemLibrary               = DLib
__dlib_dynamic_initialization = normal


*******************************************************************************
*** PLACEMENT SUMMARY
***

"A1":  place at start of [0x00000000-0x0000ffff] { ro section .intvec };
"P1":  place in [from 0x00000000 to 0x0000ffff] { ro };
"P2":  place in [from 0x20000000 to 0x20005fff] { rw, block HEAP };

  Section             Kind        Address    Size  Object
  -------             ----        -------    ----  ------
"A1":                                       0x26c
  .intvec             const    0x00000000   0x26c  startup_ewarm.o [1]
                             - 0x0000026c   0x26c

"P1":                                      0x8064
  .text               ro code  0x0000026c  0x1476  interpret.o [1]
  .text               ro code  0x000016e2    0x50  cxxabi.o [4]
  .text               ro code  0x00001732     0x6  interpret.o [1]
  .text               ro code  0x00001738   0x3ac  stepper.o [1]
  .text               ro code  0x00001ae4    0x10  interpret.o [1]
  .text               ro code  0x00001af4    0x20  interpret.o [1]
  .text               ro code  0x00001b14     0xc  interpret.o [1]
  .text               ro code  0x00001b20   0x7c8  tasks.o [1]
  .text               ro code  0x000022e8    0x4c  xassert.o [3]
  .text               ro code  0x00002334    0x36  strlen.o [7]
  .text               ro code  0x0000236a    0x2e  copy_init3.o [7]
  .text               ro code  0x00002398   0x17e  main.o [1]
  .text               ro code  0x00002516    0x22  zero_init3.o [7]
  .text               ro code  0x00002538    0x42  strcmp.o [7]
  .text               ro code  0x0000257a     0xa  interpret.o [1]
  .text               ro code  0x00002584    0x30  interpret.o [1]
  .text               ro code  0x000025b4    0x2a  interpret.o [1]
  .text               ro code  0x000025de     0xc  interpret.o [1]
  .text               ro code  0x000025ea     0x2  interpret.o [1]
  .text               ro code  0x000025ec    0x10  interpret.o [1]
  .text               ro code  0x000025fc    0x24  sscanf.o [3]
  .text               ro code  0x00002620    0x58  parseTreeEntry.o [1]
  .text               ro code  0x00002678     0x4  parseTreeEntry.o [1]
  .text               ro code  0x0000267c     0x4  parseTreeEntry.o [1]
  .text               ro code  0x00002680     0x4  parseTreeEntry.o [1]
  .text               ro code  0x00002684     0x4  parseTreeEntry.o [1]
  .text               ro code  0x00002688     0x2  interpret.o [1]
  .text               ro code  0x0000268a    0x54  symbolTableEntry.o [1]
  .text               ro code  0x000026de     0x4  symbolTableEntry.o [1]
  .text               ro code  0x000026e2     0x4  symbolTableEntry.o [1]
  .text               ro code  0x000026e6     0x4  symbolTableEntry.o [1]
  .text               ro code  0x000026ea     0x2  interpret.o [1]
  .text               ro code  0x000026ec     0xc  interpret.o [1]
  .text               ro code  0x000026f8   0x108  flashio.o [1]
  .text               ro code  0x00002800     0xe  interpret.o [1]
  .text               ro code  0x0000280e    0x1e  xsscin.o [3]
  .text               ro code  0x0000282c   0x274  io.o [1]
  .text               ro code  0x00002aa0    0x1e  interpret.o [1]
  .text               ro code  0x00002abe     0xc  interpret.o [1]
  .text               ro code  0x00002aca     0x4  parseTreeEntry.o [1]
  .text               ro code  0x00002ace    0x16  interpret.o [1]
  .text               ro code  0x00002ae4    0x16  interpret.o [1]
  .text               ro code  0x00002afa    0x34  interpret.o [1]
  .text               ro code  0x00002b2e     0x6  interpret.o [1]
  .text               ro code  0x00002b34     0x4  symbolTableEntry.o [1]
  .text               ro code  0x00002b38     0x6  interpret.o [1]
  .text               ro code  0x00002b3e     0xa  interpret.o [1]
  .text               ro code  0x00002b48    0x3c  interpret.o [1]
  .text               ro code  0x00002b84    0x26  interpret.o [1]
  .text               ro code  0x00002baa     0x6  interpret.o [1]
  .text               ro code  0x00002bb0     0x4  symbolTableEntry.o [1]
  .text               ro code  0x00002bb4    0x14  interpret.o [1]
  .text               ro code  0x00002bc8    0x1a  interpret.o [1]
  .text               ro code  0x00002be2    0x14  interpret.o [1]
  .text               ro code  0x00002bf6    0x18  interpret.o [1]
  .text               ro code  0x00002c0e    0x18  interpret.o [1]
  .text               ro code  0x00002c26     0x6  interpret.o [1]
  .text               ro code  0x00002c2c    0x34  sprintf.o [3]
  .text               ro code  0x00002c60     0x6  interpret.o [1]
  .text               ro code  0x00002c66     0xa  interpret.o [1]
  .text               ro code  0x00002c70     0xa  interpret.o [1]
  .text               ro code  0x00002c7a    0x16  interpret.o [1]
  .text               ro code  0x00002c90     0xe  interpret.o [1]
  .text               ro code  0x00002c9e    0x28  interpret.o [1]
  .text               ro code  0x00002cc6    0x16  interpret.o [1]
  .text               ro code  0x00002cdc     0x4  symbolTableEntry.o [1]
  .text               ro code  0x00002ce0    0x14  interpret.o [1]
  .text               ro code  0x00002cf4     0x4  parseTreeEntry.o [1]
  .text               ro code  0x00002cf8     0x4  parseTreeEntry.o [1]
  .text               ro code  0x00002cfc    0x1c  interpret.o [1]
  .text               ro code  0x00002d18     0x6  interpret.o [1]
  .text               ro code  0x00002d1e     0xa  xsprout.o [3]
  .text               ro code  0x00002d28    0x98  cppinit.o [3]
  .text               ro code  0x00002dc0   0x304  accel.o [1]
  .text               ro code  0x000030c4    0x30  stepper.o [1]
  .text               ro code  0x000030f4     0x6  stepper.o [1]
  .text               ro code  0x000030fa    0x22  stepper.o [1]
  .text               ro code  0x0000311c    0x26  stepper.o [1]
  .rodata             const    0x00003142     0x2  heap_2.o [1]
  .text               ro code  0x00003144    0x28  stepper.o [1]
  .text               ro code  0x0000316c    0x26  stepper.o [1]
  .text               ro code  0x00003192     0x2  interpret.o [1]
  .text               ro code  0x00003194    0x18  stepper.o [1]
  .text               ro code  0x000031ac     0x6  stepper.o [1]
  .text               ro code  0x000031b4    0x3c  stepper.o [1]
  .text               ro code  0x000031f0    0x32  stepper.o [1]
  .text               ro code  0x00003222    0x28  stepper.o [1]
  .text               ro code  0x0000324c    0x1c  stepper.o [1]
  .text               ro code  0x00003268    0x32  stepper.o [1]
  .text               ro code  0x0000329a    0x16  stepper.o [1]
  .text               ro code  0x000032b0    0xe8  stepper.o [1]
  .text               ro code  0x00003398    0x32  stepper.o [1]
  .text               ro code  0x000033ca    0x16  stepper.o [1]
  .text               ro code  0x000033e0     0x6  stepper.o [1]
  .text               ro code  0x000033e6    0x18  stepper.o [1]
  .text               ro code  0x000033fe    0x12  stepper.o [1]
  .text               ro code  0x00003410    0x14  stepper.o [1]
  .text               ro code  0x00003424    0x66  timer.o [5]
  .text               ro code  0x0000348a    0x10  stepper.o [1]
  .text               ro code  0x0000349c    0x28  stepper.o [1]
  .text               ro code  0x000034c4   0x158  port.o [1]
  .text               ro code  0x0000361c    0xa4  list.o [1]
  CODE                ro code  0x000036c0    0xa0  portasm.o [1]
  .text               ro code  0x00003760    0x62  memcmp.o [7]
  .text               ro code  0x000037c4   0x14c  heap_2.o [1]
  .text               ro code  0x00003910    0x16  tasks.o [1]
  .text               ro code  0x00003928    0xa0  xreportassert.o [3]
  .text               ro code  0x000039c8     0x6  abort.o [3]
  .text               ro code  0x000039ce   0x24c  usbbuffer.o [9]
  .text               ro code  0x00003c1c     0xc  gpio.o [5]
  .text               ro code  0x00003c28    0x84  sysctl.o [5]
  .text               ro code  0x00003cac   0x214  interrupt.o [5]
  .text               ro code  0x00003ec0    0x2c  strstr.o [3]
  .text               ro code  0x00003eec   0x504  xscanfsmall.o [3]
  .text               ro code  0x000043f0     0x4  parseTreeEntry.o [1]
  .text               ro code  0x000043f4    0x30  I32ToDbl.o [6]
  .text               ro code  0x00004424   0x1a2  DblMul.o [6]
  .text               ro code  0x000045c8   0x246  DblDiv.o [6]
  .text               ro code  0x00004810   0x180  DblSub.o [6]
  .text               ro code  0x00004990    0x4c  DblToI32.o [6]
  .text               ro code  0x000049dc    0x1c  interpret.o [1]
  .text               ro code  0x000049f8    0x1c  interpret.o [1]
  .text               ro code  0x00004a14    0x2a  interpret.o [1]
  .text               ro code  0x00004a3e    0x10  interpret.o [1]
  .text               ro code  0x00004a4e    0x26  interpret.o [1]
  .text               ro code  0x00004a74     0xc  interpret.o [1]
  .text               ro code  0x00004a80   0x11a  xprintftiny.o [3]
  .text               ro code  0x00004b9a    0x16  interpret.o [1]
  .text               ro code  0x00004bb0    0x76  ABImemcpy.o [7]
  .text               ro code  0x00004c26     0x6  accel.o [1]
  .text               ro code  0x00004c2c     0x6  accel.o [1]
  .text               ro code  0x00004c32    0x18  stepper.o [1]
  .text               ro code  0x00004c4c    0x78  stepper.o [1]
  .text               ro code  0x00004cc4    0x90  DblToFlt.o [6]
  .text               ro code  0x00004d54    0x50  expf.o [6]
  .text               ro code  0x00004da4    0x18  stepper.o [1]
  .text               ro code  0x00004dbc    0x1a  stepper.o [1]
  .text               ro code  0x00004dd8    0x4e  FltToDbl.o [6]
  .text               ro code  0x00004e28    0xe8  DblAdd.o [6]
  .text               ro code  0x00004f10    0x2c  stepper.o [1]
  .text               ro code  0x00004f3c     0x6  stepper.o [1]
  .text               ro code  0x00004f44    0x66  ABImemset.o [7]
  .text               ro code  0x00004faa    0x28  putchar.o [3]
  .text               ro code  0x00004fd4    0x14  exit.o [8]
  .text               ro code  0x00004fe8   0x152  usbringbuf.o [9]
  .text               ro code  0x0000513c    0x10  cpu.o [5]
  .text               ro code  0x0000514c    0x16  strchr.o [7]
  .text               ro code  0x00005162    0x86  xstol.o [3]
  .text               ro code  0x000051e8   0x174  xstoul.o [3]
  .text               ro code  0x0000535c     0xc  interpret.o [1]
  .text               ro code  0x00005368     0xe  interpret.o [1]
  .text               ro code  0x00005376     0x6  interpret.o [1]
  .text               ro code  0x0000537c   0x21c  xfexp.o [6]
  .text               ro code  0x00005598    0x10  write.o [8]
  .text               ro code  0x000055a8    0x6c  iarttio.o [8]
  .text               ro code  0x00005614     0xc  errno.o [3]
  .text               ro code  0x00005620    0x58  memchr.o [7]
  .text               ro code  0x00005678    0xc8  xfdscale.o [6]
  .text               ro code  0x00005740    0x1e  dwrite.o [8]
  .text               ro code  0x00005760     0x8  XShttio.o [3]
  .text               ro code  0x00005768     0x2  xtls.o [3]
  .text               ro code  0x0000576a    0x26  xfdnorm.o [6]
  .text               ro code  0x00005790    0x20  iarwstd.o [8]
  .text               ro code  0x000057b0    0x22  iarwrite.o [8]
  .text               ro code  0x000057d4   0x96c  usbdenum.o [9]
  .text               ro code  0x00006140   0x3f6  usb.o [5]
  .text               ro code  0x00006538   0x478  usbdma.o [9]
  .text               ro code  0x000069b0    0x6c  usbtick.o [9]
  .text               ro code  0x00006a1c   0x150  usbdcdesc.o [9]
  .text               ro code  0x00006b6c   0x228  usbdconfig.o [9]
  .text               ro code  0x00006d94   0x11c  udma.o [5]
  .text               ro code  0x00006eb0    0x54  usbdesc.o [9]
  .text               ro code  0x00006f04   0x750  usbdcdc.o [9]
  .text               ro code  0x00007654   0x56c  usb_dev_serial.o [1]
  .text               ro code  0x00007bc0    0x1c  usbmode.o [9]
  .rodata             const    0x00007bdc    0x6c  usbdcdc.o [9]
  .text               ro code  0x00007c48    0x54  interpret.o [1]
  .text               ro code  0x00007c9c     0xe  interpret.o [1]
  .text               ro code  0x00007caa     0x2  interpret.o [1]
  .text               ro code  0x00007cac    0x16  interpret.o [1]
  .text               ro code  0x00007cc2     0x2  interpret.o [1]
  .text               ro code  0x00007cc4     0x2  interpret.o [1]
  .text               ro code  0x00007cc6     0x2  interpret.o [1]
  .rodata             const    0x00007cc8    0x48  interpret.o [1]
  .rodata             const    0x00007d10    0x38  usb_serial_structs.o [1]
  .rodata             const    0x00007d48    0x30  interpret.o [1]
  .rodata             const    0x00007d78    0x2c  interpret.o [1]
  .rodata             const    0x00007da4    0x2c  interpret.o [1]
  .rodata             const    0x00007dd0    0x2c  usb_serial_structs.o [1]
  .rodata             const    0x00007dfc    0x28  main.o [1]
  .rodata             const    0x00007e24    0x28  stepper.o [1]
  .text               ro code  0x00007e4c    0x28  data_init3.o [7]
  .rodata             const    0x00007e74    0x24  usb_serial_structs.o [1]
  .rodata             const    0x00007e98    0x24  usb_serial_structs.o [1]
  .rodata             const    0x00007ebc    0x24  usb_serial_structs.o [1]
  .rodata             const    0x00007ee0    0x24  usb_serial_structs.o [1]
  .iar.init_table     const    0x00007f04    0x28  - Linker created -
  .rodata             const    0x00007f2c    0x20  interpret.o [1]
  .rodata             const    0x00007f4c    0x20  interpret.o [1]
  .text               ro code  0x00007f6c    0x20  cmain_call_ctors.o [7]
  .text               ro code  0x00007f8c    0x1e  startup_ewarm.o [1]
  .text               ro code  0x00007faa     0xc  cstartup_M.o [7]
  .text               ro code  0x00007fb8    0x1a  fpinit_M.o [6]
  .text               ro code  0x00007fd4    0x16  cmain.o [7]
  .text               ro code  0x00007fea     0x4  low_level_init.o [3]
  .text               ro code  0x00007fee     0x4  exit.o [3]
  .text               ro code  0x00007ff4     0xe  cexit.o [7]
  .rodata             const    0x00008004    0x18  stepper.o [1]
  .rodata             const    0x0000801c    0x18  usb_serial_structs.o [1]
  .text               ro code  0x00008034    0x18  usbdhandler.o [9]
  .rodata             const    0x0000804c    0x14  tasks.o [1]
  .rodata             const    0x00008060    0x14  usb_serial_structs.o [1]
  .rodata             const    0x00008074    0x10  interpret.o [1]
  .rodata             const    0x00008084    0x10  interpret.o [1]
  .rodata             const    0x00008094    0x10  usb_dev_serial.o [1]
  .rodata             const    0x000080a4     0xc  interpret.o [1]
  .rodata             const    0x000080b0     0xc  interpret.o [1]
  .rodata             const    0x000080bc     0xc  interpret.o [1]
  .rodata             const    0x000080c8     0xc  interpret.o [1]
  .rodata             const    0x000080d4     0xc  interpret.o [1]
  .rodata             const    0x000080e0     0xc  interpret.o [1]
  .rodata             const    0x000080ec     0xc  interpret.o [1]
  .rodata             const    0x000080f8     0xc  interpret.o [1]
  .rodata             const    0x00008104     0xc  interpret.o [1]
  .rodata             const    0x00008110     0xc  interpret.o [1]
  .rodata             const    0x0000811c     0xc  main.o [1]
  .rodata             const    0x00008128     0xc  usb_dev_serial.o [1]
  .rodata             const    0x00008134     0x8  interpret.o [1]
  .rodata             const    0x0000813c     0x8  interpret.o [1]
  .rodata             const    0x00008144     0x8  interpret.o [1]
  .rodata             const    0x0000814c     0x8  interpret.o [1]
  .rodata             const    0x00008154     0x8  interpret.o [1]
  .rodata             const    0x0000815c     0x8  interpret.o [1]
  .rodata             const    0x00008164     0x8  interpret.o [1]
  .rodata             const    0x0000816c     0x8  interpret.o [1]
  .rodata             const    0x00008174     0x8  interpret.o [1]
  .rodata             const    0x0000817c     0x8  interpret.o [1]
  .rodata             const    0x00008184     0x8  interpret.o [1]
  .rodata             const    0x0000818c     0x8  interpret.o [1]
  .rodata             const    0x00008194     0x8  interpret.o [1]
  .rodata             const    0x0000819c     0x8  interpret.o [1]
  .rodata             const    0x000081a4     0x8  interpret.o [1]
  .rodata             const    0x000081ac     0x8  interpret.o [1]
  .rodata             const    0x000081b4     0x8  interpret.o [1]
  .rodata             const    0x000081bc     0x8  interpret.o [1]
  .rodata             const    0x000081c4     0x8  interpret.o [1]
  .rodata             const    0x000081cc     0x8  interpret.o [1]
  .rodata             const    0x000081d4     0x8  interpret.o [1]
  .rodata             const    0x000081dc     0x8  main.o [1]
  .rodata             const    0x000081e4     0x8  main.o [1]
  .rodata             const    0x000081ec     0x8  tasks.o [1]
  .rodata             const    0x000081f4     0x4  usb_serial_structs.o [1]
  SHT$$PREINIT_ARRAY           0x000081f8     0x0  <Block>
  SHT$$INIT_ARRAY              0x000081f8     0x4  <Block>
    .init_array       const    0x000081f8     0x4  interpret.o [1]
  .text               ro code  0x000081fc     0x0  cstart_call_dtors.o [7]
  .rodata             const    0x000081fc     0x0  zero_init3.o [7]
  .rodata             const    0x000081fc     0x0  copy_init3.o [7]
  Initializer bytes   ro data  0x000081fc    0xd4  <for P2 s0>
                             - 0x000082d0  0x8064

"P2", part 1 of 3:                           0xd4
  P2 s0                        0x20000000    0xd4  <Init block>
    .data             inited   0x20000000    0x60  usb_serial_structs.o [1]
    .data             inited   0x20000060    0x20  usbdcdc.o [9]
    .data             inited   0x20000080    0x10  usbdcdc.o [9]
    .data             inited   0x20000090    0x10  usbmode.o [9]
    .data             inited   0x200000a0     0xc  usbdcdc.o [9]
    .data             inited   0x200000ac     0x8  usbdcdc.o [9]
    .data             inited   0x200000b4     0x8  XShttio.o [3]
    .data             inited   0x200000bc     0x4  heap_2.o [1]
    .data             inited   0x200000c0     0x4  interpret.o [1]
    .data             inited   0x200000c4     0x4  interpret.o [1]
    .data             inited   0x200000c8     0x4  port.o [1]
    .data             inited   0x200000cc     0x4  tasks.o [1]
    .data             inited   0x200000d0     0x1  interpret.o [1]
                             - 0x200000d4    0xd4

"P2", part 2 of 3:                         0x4904
  .bss                zero     0x200000d4  0x2ee0  heap_2.o [1]
  .bss                zero     0x20002fb4  0x1338  interpret.o [1]
  .bss                zero     0x200042ec   0x110  usbdma.o [9]
  .bss                zero     0x200043fc   0x108  interpret.o [1]
  .bss                zero     0x20004504   0x100  usb_serial_structs.o [1]
  .bss                zero     0x20004604   0x100  usb_serial_structs.o [1]
  .bss                zero     0x20004704    0x64  tasks.o [1]
  .bss                zero     0x20004768    0x50  usbdenum.o [9]
  .bss                zero     0x200047b8    0x40  usbdenum.o [9]
  .bss                zero     0x200047f8    0x38  usbtick.o [9]
  .bss                zero     0x20004830    0x20  interpret.o [1]
  .bss                zero     0x20004850    0x20  interpret.o [1]
  .bss                zero     0x20004870    0x20  interpret.o [1]
  .bss                zero     0x20004890    0x18  usb_serial_structs.o [1]
  .bss                zero     0x200048a8    0x18  usb_serial_structs.o [1]
  .bss                zero     0x200048c0    0x14  tasks.o [1]
  .bss                zero     0x200048d4    0x14  tasks.o [1]
  .bss                zero     0x200048e8    0x14  tasks.o [1]
  .bss                zero     0x200048fc    0x14  tasks.o [1]
  .bss                zero     0x20004910    0x14  tasks.o [1]
  .bss                zero     0x20004924    0x10  interpret.o [1]
  .bss                zero     0x20004934     0x8  heap_2.o [1]
  .bss                zero     0x2000493c     0x8  heap_2.o [1]
  .bss                zero     0x20004944     0x4  heap_2.o [1]
  .bss                zero     0x20004948     0x4  interpret.o [1]
  .bss                zero     0x2000494c     0x4  interpret.o [1]
  .bss                zero     0x20004950     0x4  interpret.o [1]
  .bss                zero     0x20004954     0x4  interpret.o [1]
  .bss                zero     0x20004958     0x4  interpret.o [1]
  .bss                zero     0x2000495c     0x4  interpret.o [1]
  .bss                zero     0x20004960     0x4  interpret.o [1]
  .bss                zero     0x20004964     0x4  interpret.o [1]
  .bss                zero     0x20004968     0x4  interpret.o [1]
  .bss                zero     0x2000496c     0x4  interpret.o [1]
  .bss                zero     0x20004970     0x4  interpret.o [1]
  .bss                zero     0x20004974     0x4  port.o [1]
  .bss                zero     0x20004978     0x4  stepper.o [1]
  .bss                zero     0x2000497c     0x4  tasks.o [1]
  .bss                zero     0x20004980     0x4  tasks.o [1]
  .bss                zero     0x20004984     0x4  tasks.o [1]
  .bss                zero     0x20004988     0x4  tasks.o [1]
  .bss                zero     0x2000498c     0x4  tasks.o [1]
  .bss                zero     0x20004990     0x4  tasks.o [1]
  .bss                zero     0x20004994     0x4  tasks.o [1]
  .bss                zero     0x20004998     0x4  tasks.o [1]
  .bss                zero     0x2000499c     0x4  tasks.o [1]
  .bss                zero     0x200049a0     0x4  tasks.o [1]
  .bss                zero     0x200049a4     0x4  tasks.o [1]
  .bss                zero     0x200049a8     0x4  tasks.o [1]
  .bss                zero     0x200049ac     0x4  tasks.o [1]
  .bss                zero     0x200049b0     0x4  usb_dev_serial.o [1]
  .bss                zero     0x200049b4     0x4  usb_dev_serial.o [1]
  .bss                zero     0x200049b8     0x4  usb_dev_serial.o [1]
  .bss                zero     0x200049bc     0x4  usb_dev_serial.o [1]
  .bss                zero     0x200049c0     0x4  usbtick.o [9]
  .bss                zero     0x200049c4     0x4  cppinit.o [3]
  .bss                zero     0x200049c8     0x4  cppinit.o [3]
  __DLIB_PERTHREAD    zero     0x200049cc     0x4  errno.o [3]
  .bss                zero     0x200049d0     0x1  interpret.o [1]
  .bss                zero     0x200049d1     0x1  interpret.o [1]
  .bss                zero     0x200049d2     0x1  interpret.o [1]
  .bss                zero     0x200049d3     0x1  port.o [1]
  .bss                zero     0x200049d4     0x1  usb_dev_serial.o [1]
  .bss                zero     0x200049d5     0x1  usb_dev_serial.o [1]
                             - 0x200049d6  0x4902

"P2", part 3 of 3:                          0x5bc
  .noinit             uninit   0x200049d8   0x400  startup_ewarm.o [1]
  .iar.dynexit                 0x20004dd8   0x1bc  <Block>
    .iar.dynexit      uninit   0x20004dd8     0xc  cppinit.o [3]
    .iar.dynexit      uninit   0x20004de4   0x1b0  <Block tail>
                             - 0x20004f94   0x5bc


*******************************************************************************
*** INIT TABLE
***

          Address     Size
          -------     ----
Zero (__iar_zero_init3)
    1 destination range, total size 0x4902:
          0x200000d4  0x4902

Copy (__iar_copy_init3)
    1 source range, total size 0xd4 (101% of destination):
          0x000081fc    0xd4
    1 destination range, total size 0xd1:
          0x20000000    0xd1

Extra (__iar_cstart_call_ctors)


*******************************************************************************
*** STACK USAGE
***

  Call Graph Root Category  Max Use  Total Use
  ------------------------  -------  ---------
  Program entry                 328        328
  Uncalled function             392      3 608


Program entry
  "__iar_program_start": 0x00007fab

  Maximum call chain                            *?* 328 bytes
    (** call graph contains indirect calls (example: "main")
                            functions with no stack usage info (example: "ulPortSetInterruptMask") **)

    "__iar_program_start"                             0
    "__cmain"                                         0
    "main"                                           16
    "mainA"                                           0
    "vStartIdleTask"                                 24
    "xTaskGenericCreate"                             48
    "prvAllocateTCBAndStack" in tasks.o [1]          16
    "pvPortMalloc"                                   24
    "xTaskResumeAll"                                 24
    "xTaskIncrementTick"                             24
    "localAssert"                                     8
    "__aeabi_assert"                                 32
    "__iar_ReportAssert"                             24
    "out" in xreportassert.o [3]                      8
    "putchar"                                        16
    "__write"                                         8
    "__dwrite"                                        8
    "__iar_sh_stdout"                                24
    "__iar_get_ttio"                                 24
    "__iar_lookup_ttioh"                              0

Uncalled function
  "vIdleTask" in main.o [1]: 0x00002481

  Maximum call chain                            *?* 224 bytes
    (** call graph contains functions with no stack usage info (example: "ulPortSetInterruptMask") **)

    "vIdleTask" in main.o [1]                         0
    "vTaskDelay"                                     24
    "xTaskResumeAll"                                 24
    "xTaskIncrementTick"                             24
    "localAssert"                                     8
    "__aeabi_assert"                                 32
    "__iar_ReportAssert"                             24
    "out" in xreportassert.o [3]                      8
    "putchar"                                        16
    "__write"                                         8
    "__dwrite"                                        8
    "__iar_sh_stdout"                                24
    "__iar_get_ttio"                                 24
    "__iar_lookup_ttioh"                              0

Uncalled function
  "vInterpretTask" in main.o [1]: 0x000024f9

  Maximum call chain                            *?* 392 bytes
    (** call graph contains indirect calls (example: "ScheduleNextTransmission" in usbbuffer.o [9])
                            functions with no stack usage info (example: "ulPortSetInterruptMask") **)

    "vInterpretTask" in main.o [1]                    0
    "interpretState"                                  0
    "interpret::run(int)"                            80
    "stepper::moveRelativeDegreex10k(int)"           16
    "stepper::moveRelative(int)"                     16
    "stepper::moveAbsolute(int)"                     40
    "accel::stepsToMicroSec(unsigned int)"           40
    "accel::microSecToSteps(unsigned int)"           24
    "accel::reset(unsigned int)"                     16
    "accel::curveIndexToClockTicks(unsigned int) const"
                                                     16
    "__aeabi_assert"                                 32
    "__iar_ReportAssert"                             24
    "out" in xreportassert.o [3]                      8
    "putchar"                                        16
    "__write"                                         8
    "__dwrite"                                        8
    "__iar_sh_stdout"                                24
    "__iar_get_ttio"                                 24
    "__iar_lookup_ttioh"                              0

Uncalled function
  "xPortSysTickHandler": 0x000035c7

  Maximum call chain                            *?* 184 bytes
    (** call graph contains functions with no stack usage info (example: "ulPortSetInterruptMask") **)

    "xPortSysTickHandler"                             8
    "xTaskIncrementTick"                             24
    "localAssert"                                     8
    "__aeabi_assert"                                 32
    "__iar_ReportAssert"                             24
    "out" in xreportassert.o [3]                      8
    "putchar"                                        16
    "__write"                                         8
    "__dwrite"                                        8
    "__iar_sh_stdout"                                24
    "__iar_get_ttio"                                 24
    "__iar_lookup_ttioh"                              0

Uncalled function
  "??FaultISR_0" in startup_ewarm.o [1]: 0x00007fa7

  Maximum call chain                                 0 bytes

    "??FaultISR_0" in startup_ewarm.o [1]            0

Uncalled function
  "??IntDefaultHandler_0" in startup_ewarm.o [1]: 0x00007fa9

  Maximum call chain                                 0 bytes

    "??IntDefaultHandler_0" in startup_ewarm.o [1]
                                                     0

Uncalled function
  "??NmiSR_0" in startup_ewarm.o [1]: 0x00007fa5

  Maximum call chain                                 0 bytes

    "??NmiSR_0" in startup_ewarm.o [1]               0

Uncalled function
  "ResetISR": 0x00007f8d

  Maximum call chain                            *?* 336 bytes
    (** call graph contains indirect calls (example: "main")
                            functions with no stack usage info (example: "ulPortSetInterruptMask") **)

    "ResetISR"                                        8
    "__iar_program_start"                             0
    "__cmain"                                         0
    "main"                                           16
    "mainA"                                           0
    "vStartIdleTask"                                 24
    "xTaskGenericCreate"                             48
    "prvAllocateTCBAndStack" in tasks.o [1]          16
    "pvPortMalloc"                                   24
    "xTaskResumeAll"                                 24
    "xTaskIncrementTick"                             24
    "localAssert"                                     8
    "__aeabi_assert"                                 32
    "__iar_ReportAssert"                             24
    "out" in xreportassert.o [3]                      8
    "putchar"                                        16
    "__write"                                         8
    "__dwrite"                                        8
    "__iar_sh_stdout"                                24
    "__iar_get_ttio"                                 24
    "__iar_lookup_ttioh"                              0

Uncalled function
  "stepperISR": 0x00001739

  Maximum call chain                            *?* 192 bytes
    (** call graph contains indirect calls (example: "stepperISR") **)

    "stepperISR"                                      8
    "stepper::isr()"                                  8
    "accel::reset(unsigned int)"                     16
    "accel::curveIndexToClockTicks(unsigned int) const"
                                                     16
    "__aeabi_assert"                                 32
    "__iar_ReportAssert"                             24
    "out" in xreportassert.o [3]                      8
    "putchar"                                        16
    "__write"                                         8
    "__dwrite"                                        8
    "__iar_sh_stdout"                                24
    "__iar_get_ttio"                                 24
    "__iar_lookup_ttioh"                              0

Uncalled function
  "prvIdleTask" in tasks.o [1]: 0x000020ad

  Maximum call chain                            *?* 248 bytes
    (** call graph contains functions with no stack usage info (example: "ulPortSetInterruptMask") **)

    "prvIdleTask" in tasks.o [1]                      0
    "prvCheckTasksWaitingTermination" in tasks.o [1]
                                                     16
    "prvDeleteTCB" in tasks.o [1]                     8
    "vPortFree"                                      24
    "xTaskResumeAll"                                 24
    "xTaskIncrementTick"                             24
    "localAssert"                                     8
    "__aeabi_assert"                                 32
    "__iar_ReportAssert"                             24
    "out" in xreportassert.o [3]                      8
    "putchar"                                        16
    "__write"                                         8
    "__dwrite"                                        8
    "__iar_sh_stdout"                                24
    "__iar_get_ttio"                                 24
    "__iar_lookup_ttioh"                              0

Uncalled function
  "vTaskSwitchContext": 0x00001fe5

  Maximum call chain                               160 bytes

    "vTaskSwitchContext"                             8
    "localAssert"                                    8
    "__aeabi_assert"                                32
    "__iar_ReportAssert"                            24
    "out" in xreportassert.o [3]                     8
    "putchar"                                       16
    "__write"                                        8
    "__dwrite"                                       8
    "__iar_sh_stdout"                               24
    "__iar_get_ttio"                                24
    "__iar_lookup_ttioh"                             0

Uncalled function
  "ControlHandler": 0x0000792d

  Maximum call chain                            *?* 48 bytes
    (** call graph contains indirect calls (example: "ControlHandler") **)

    "ControlHandler"                                24
    "SetLineCoding" in usb_dev_serial.o [1]         24

Uncalled function
  "RxHandler": 0x00007a13

  Maximum call chain                            *?* 120 bytes
    (** call graph contains indirect calls (example: "RxHandler") **)

    "RxHandler"                                      24
    "USBUARTPrimeTransmit" in usb_dev_serial.o [1]
                                                     16
    "USBBufferRead"                                  24
    "USBRingBufRead"                                 24
    "USBRingBufReadOne"                               8
    "UpdateIndexAtomic" in usbringbuf.o [9]          16
    "IntMasterDisable"                                8
    "CPUcpsid"                                        0

Uncalled function
  "TxHandler": 0x00007a05

  Maximum call chain                                 4 bytes

    "TxHandler"                                      4

Uncalled function
  "USBUARTIntHandler": 0x00007747

  Maximum call chain                            *?* 344 bytes
    (** call graph contains indirect calls (example: "USBUARTIntHandler") **)

    "USBUARTIntHandler"                              16
    "ReadUARTData" in usb_dev_serial.o [1]           24
    "bufferInput"                                    64
    "sscanf"                                         24
    "_ScanfSmall"                                    64
    "_GetintSmall" in xscanfsmall.o [3]              64
    "__iar_Stolx"                                    32
    "__iar_Stoulx"                                   56
    "__aeabi_errno_addr"                              0
    "__iar_dlib_perthread_access"                     0

Uncalled function
  "USBBufferEventCallback": 0x00003b8f

  Maximum call chain                            *?* 72 bytes
    (** call graph contains indirect calls (example: "USBBufferEventCallback") **)

    "USBBufferEventCallback"                         0
    "HandleRxAvailable" in usbbuffer.o [9]          24
    "USBRingBufWrite"                               24
    "USBRingBufWriteOne"                             0
    "UpdateIndexAtomic" in usbringbuf.o [9]         16
    "IntMasterDisable"                               8
    "CPUcpsid"                                       0

Uncalled function
  "USB0DeviceIntHandler": 0x00008035

  Maximum call chain                            *?* 108 bytes
    (** call graph contains indirect calls (example: "USBDeviceIntHandlerInternal") **)

    "USB0DeviceIntHandler"                            0
    "USBDeviceIntHandlerInternal"                    24
    "USBDeviceEnumHandler"                           24
    "USBDEP0StateTxConfig" in usbdenum.o [9]         48
    "USBEndpointDataPut"                             12

Uncalled function
  "CDCTickHandler" in usbdcdc.o [9]: 0x00007369

  Maximum call chain                            *?* 32 bytes
    (** call graph contains indirect calls (example: "DeviceConsumedAllData" in usbdcdc.o [9]) **)

    "CDCTickHandler" in usbdcdc.o [9]               16
    "SendBreak" in usbdcdc.o [9]                    16

Uncalled function
  "HandleConfigChange" in usbdcdc.o [9]: 0x0000717d

  Maximum call chain                            *?* 16 bytes
    (** call graph contains indirect calls (example: "HandleConfigChange" in usbdcdc.o [9]) **)

    "HandleConfigChange" in usbdcdc.o [9]           16

Uncalled function
  "HandleDevice" in usbdcdc.o [9]: 0x000071f7

  Maximum call chain                                 8 bytes

    "HandleDevice" in usbdcdc.o [9]                  8

Uncalled function
  "HandleDisconnect" in usbdcdc.o [9]: 0x00007323

  Maximum call chain                            *?* 16 bytes
    (** call graph contains indirect calls (example: "HandleDisconnect" in usbdcdc.o [9]) **)

    "HandleDisconnect" in usbdcdc.o [9]             16

Uncalled function
  "HandleEP0Data" in usbdcdc.o [9]: 0x000071a9

  Maximum call chain                            *?* 32 bytes
    (** call graph contains indirect calls (example: "DeviceConsumedAllData" in usbdcdc.o [9]) **)

    "HandleEP0Data" in usbdcdc.o [9]                16
    "SendLineCodingChange" in usbdcdc.o [9]         16

Uncalled function
  "HandleEndpoints" in usbdcdc.o [9]: 0x0000712b

  Maximum call chain                            *?* 76 bytes
    (** call graph contains indirect calls (example: "ProcessDataFromHost") **)

    "HandleEndpoints" in usbdcdc.o [9]              24
    "ProcessNotificationToHost"                     16
    "SendSerialState" in usbdcdc.o [9]              24
    "USBEndpointDataPut"                            12

Uncalled function
  "HandleRequests" in usbdcdc.o [9]: 0x00007259

  Maximum call chain                            *?* 52 bytes
    (** call graph contains indirect calls (example: "HandleRequests" in usbdcdc.o [9]) **)

    "HandleRequests" in usbdcdc.o [9]               24
    "USBDCDSendDataEP0"                              0
    "USBDEP0StateTx" in usbdenum.o [9]              16
    "USBEndpointDataPut"                            12

Uncalled function
  "HandleResume" in usbdcdc.o [9]: 0x00007351

  Maximum call chain                             *?* 8 bytes
    (** call graph contains indirect calls (example: "HandleResume" in usbdcdc.o [9]) **)

    "HandleResume" in usbdcdc.o [9]                  8

Uncalled function
  "HandleSuspend" in usbdcdc.o [9]: 0x00007345

  Maximum call chain                             *?* 8 bytes
    (** call graph contains indirect calls (example: "HandleSuspend" in usbdcdc.o [9]) **)

    "HandleSuspend" in usbdcdc.o [9]                 8

Uncalled function
  "USBDCDCPacketRead": 0x00007525

  Maximum call chain                                44 bytes

    "USBDCDCPacketRead"                             32
    "USBEndpointDataGet"                            12

Uncalled function
  "USBDCDCPacketWrite": 0x000074d9

  Maximum call chain                                28 bytes

    "USBDCDCPacketWrite"                            16
    "USBEndpointDataPut"                            12

Uncalled function
  "USBDCDCRxPacketAvailable": 0x000075b3

  Maximum call chain                                 8 bytes

    "USBDCDCRxPacketAvailable"                       8
    "USBEndpointStatus"                              0

Uncalled function
  "USBDCDCTxPacketAvailable": 0x000075a3

  Maximum call chain                                 0 bytes

    "USBDCDCTxPacketAvailable"                       0

Uncalled function
  "USBDClearFeature" in usbdenum.o [9]: 0x00005ad7

  Maximum call chain                                16 bytes

    "USBDClearFeature" in usbdenum.o [9]            16

Uncalled function
  "USBDGetConfiguration" in usbdenum.o [9]: 0x00005cfb

  Maximum call chain                            *?* 44 bytes
    (** call graph contains indirect calls (example: "USBDEP0StateTx" in usbdenum.o [9]) **)

    "USBDGetConfiguration" in usbdenum.o [9]        16
    "USBDEP0StateTx" in usbdenum.o [9]              16
    "USBEndpointDataPut"                            12

Uncalled function
  "USBDGetDescriptor" in usbdenum.o [9]: 0x00005bcd

  Maximum call chain                            *?* 60 bytes
    (** call graph contains indirect calls (example: "USBDEP0StateTx" in usbdenum.o [9]) **)

    "USBDGetDescriptor" in usbdenum.o [9]            0
    "USBDEP0StateTxConfig" in usbdenum.o [9]        48
    "USBEndpointDataPut"                            12

Uncalled function
  "USBDGetInterface" in usbdenum.o [9]: 0x00005db3

  Maximum call chain                            *?* 44 bytes
    (** call graph contains indirect calls (example: "USBDEP0StateTx" in usbdenum.o [9]) **)

    "USBDGetInterface" in usbdenum.o [9]            16
    "USBDEP0StateTx" in usbdenum.o [9]              16
    "USBEndpointDataPut"                            12

Uncalled function
  "USBDGetStatus" in usbdenum.o [9]: 0x00005a87

  Maximum call chain                            *?* 44 bytes
    (** call graph contains indirect calls (example: "USBDEP0StateTx" in usbdenum.o [9]) **)

    "USBDGetStatus" in usbdenum.o [9]               16
    "USBDEP0StateTx" in usbdenum.o [9]              16
    "USBEndpointDataPut"                            12

Uncalled function
  "USBDSetAddress" in usbdenum.o [9]: 0x00005bb3

  Maximum call chain                                16 bytes

    "USBDSetAddress" in usbdenum.o [9]              16

Uncalled function
  "USBDSetConfiguration" in usbdenum.o [9]: 0x00005d2d

  Maximum call chain                            *?* 240 bytes
    (** call graph contains indirect calls (example: "USBDSetConfiguration" in usbdenum.o [9]) **)

    "USBDSetConfiguration" in usbdenum.o [9]         24
    "USBDeviceConfig"                               112
    "USBDCDConfigGetInterfaceEndpoint"               24
    "USBDCDConfigGetInterface"                       32
    "USBDCDConfigDescGet"                            32
    "USBDescGetNum"                                  16

Uncalled function
  "USBDSetDescriptor" in usbdenum.o [9]: 0x00005cf5

  Maximum call chain                                 8 bytes

    "USBDSetDescriptor" in usbdenum.o [9]            8

Uncalled function
  "USBDSetFeature" in usbdenum.o [9]: 0x00005b53

  Maximum call chain                                16 bytes

    "USBDSetFeature" in usbdenum.o [9]              16

Uncalled function
  "USBDSetInterface" in usbdenum.o [9]: 0x00005def

  Maximum call chain                            *?* 192 bytes
    (** call graph contains indirect calls (example: "USBDSetInterface" in usbdenum.o [9]) **)

    "USBDSetInterface" in usbdenum.o [9]             40
    "USBDeviceConfigAlternate"                       48
    "USBDCDConfigGetInterfaceEndpoint"               24
    "USBDCDConfigGetInterface"                       32
    "USBDCDConfigDescGet"                            32
    "USBDescGetNum"                                  16

Uncalled function
  "USBDSyncFrame" in usbdenum.o [9]: 0x00005e77

  Maximum call chain                                 8 bytes

    "USBDSyncFrame" in usbdenum.o [9]                8
    "USBDevEndpointDataAck"                          0

Uncalled function
  "DMAUSBIntHandler" in usbdma.o [9]: 0x00006595

  Maximum call chain                                12 bytes

    "DMAUSBIntHandler" in usbdma.o [9]              12

Uncalled function
  "DMAUSBIntStatusClear" in usbdma.o [9]: 0x00006587

  Maximum call chain                                 0 bytes

    "DMAUSBIntStatusClear" in usbdma.o [9]           0

Uncalled function
  "DMAUSBStatus" in usbdma.o [9]: 0x000068e1

  Maximum call chain                                 0 bytes

    "DMAUSBStatus" in usbdma.o [9]                   0

Uncalled function
  "uDMAUSBArbSizeSet" in usbdma.o [9]: 0x00006879

  Maximum call chain                                 0 bytes

    "uDMAUSBArbSizeSet" in usbdma.o [9]              0

Uncalled function
  "uDMAUSBChannelAllocate" in usbdma.o [9]: 0x0000672f

  Maximum call chain                                32 bytes

    "uDMAUSBChannelAllocate" in usbdma.o [9]        24
    "USBEndpointDMAChannel"                          8

Uncalled function
  "uDMAUSBChannelDisable" in usbdma.o [9]: 0x00006617

  Maximum call chain                                16 bytes

    "uDMAUSBChannelDisable" in usbdma.o [9]         16
    "USBEndpointDMADisable"                          0

Uncalled function
  "uDMAUSBChannelIntDisable" in usbdma.o [9]: 0x0000666b

  Maximum call chain                                 0 bytes

    "uDMAUSBChannelIntDisable" in usbdma.o [9]       0

Uncalled function
  "uDMAUSBChannelIntEnable" in usbdma.o [9]: 0x00006669

  Maximum call chain                                 0 bytes

    "uDMAUSBChannelIntEnable" in usbdma.o [9]        0

Uncalled function
  "uDMAUSBChannelRelease" in usbdma.o [9]: 0x000067d5

  Maximum call chain                                24 bytes

    "uDMAUSBChannelRelease" in usbdma.o [9]         24
    "USBEndpointDMADisable"                          0

Uncalled function
  "uDMAUSBChannelStatus" in usbdma.o [9]: 0x00006539

  Maximum call chain                                 0 bytes

    "uDMAUSBChannelStatus" in usbdma.o [9]           0

Uncalled function
  "uDMAUSBIntStatus" in usbdma.o [9]: 0x0000655d

  Maximum call chain                                16 bytes

    "uDMAUSBIntStatus" in usbdma.o [9]              16
    "uDMAChannelModeGet"                             0

Uncalled function
  "uDMAUSBTransfer" in usbdma.o [9]: 0x0000666d

  Maximum call chain                                60 bytes

    "uDMAUSBTransfer" in usbdma.o [9]               40
    "uDMAChannelTransferSet"                        20

Uncalled function
  "uDMAUSBUnitSizeSet" in usbdma.o [9]: 0x0000682f

  Maximum call chain                                 0 bytes

    "uDMAUSBUnitSizeSet" in usbdma.o [9]             0

The following functions appear not to be called and have no stack
usage information:

  "vPortSVCHandler": 0x0000371f
  "xPortPendSVHandler": 0x000036c1

The following functions appear to be called, but have no stack
usage information:

  "ulPortSetInterruptMask": 0x0000370b
  "vPortClearInterruptMask": 0x00003719
  "vPortEnableVFP": 0x00003745
  "vPortStartFirstTask": 0x00003737

The following functions perform unknown indirect calls:

  "CDCTickHandler" in usbdcdc.o [9]: 0x00007369
  "ControlHandler": 0x0000792d
  "DeviceConsumedAllData" in usbdcdc.o [9]: 0x00006f1d
  "GetLineCoding" in usb_dev_serial.o [1]: 0x00007857
  "HandleConfigChange" in usbdcdc.o [9]: 0x0000717d
  "HandleDisconnect" in usbdcdc.o [9]: 0x00007323
  "HandleRequests" in usbdcdc.o [9]: 0x00007259
  "HandleResume" in usbdcdc.o [9]: 0x00007351
  "HandleRxAvailable" in usbbuffer.o [9]: 0x00003a5d
  "HandleSuspend" in usbdcdc.o [9]: 0x00007345
  "InternalUSBStartOfFrameTick": 0x000069f1
  "ProcessDataFromHost": 0x0000702f
  "ProcessDataToHost": 0x000070d1
  "ReadUARTData" in usb_dev_serial.o [1]: 0x0000768f
  "RxHandler": 0x00007a13
  "ScheduleNextTransmission" in usbbuffer.o [9]: 0x000039cf
  "SendBreak" in usb_dev_serial.o [1]: 0x000078fb
  "SendBreak" in usbdcdc.o [9]: 0x00006f35
  "SendLineCodingChange" in usbdcdc.o [9]: 0x00006f6f
  "SendLineStateChange" in usbdcdc.o [9]: 0x00006f8d
  "SetLineCoding" in usb_dev_serial.o [1]: 0x000077ad
  "USBBufferEventCallback": 0x00003b8f
  "USBDEP0StateTx" in usbdenum.o [9]: 0x00005e87
  "USBDEP0StateTxConfig" in usbdenum.o [9]: 0x00005eed
  "USBDGetDescriptor" in usbdenum.o [9]: 0x00005bcd
  "USBDReadAndDispatchRequest" in usbdenum.o [9]: 0x00005927
  "USBDSetConfiguration" in usbdenum.o [9]: 0x00005d2d
  "USBDSetInterface" in usbdenum.o [9]: 0x00005def
  "USBDeviceEnumHandler": 0x00005981
  "USBDeviceEnumResetHandler": 0x00005a4b
  "USBDeviceIntHandlerInternal": 0x0000602b
  "USBDeviceResumeTickHandler": 0x000058dd
  "USBStackModeSet": 0x00007bc1
  "USBUARTIntHandler": 0x00007747
  "USBUARTPrimeTransmit" in usb_dev_serial.o [1]: 0x000076f3
  "flashio::saveData(unsigned int *, unsigned int, unsigned long)": 0x000026fb
  "io::getADC(unsigned int)": 0x000029bb
  "io::getTemperature()": 0x00002a07
  "io::init()": 0x0000282f
  "main": 0x00007a5b
  "stepperISR": 0x00001739
  "stepper_init": 0x0000178f


*******************************************************************************
*** MODULE SUMMARY
***

    Module                ro code  ro data  rw data
    ------                -------  -------  -------
C:\dev\docs\scottdesign\motor\Debug\Obj: [1]
    accel.o                   784
    flashio.o                 264
    heap_2.o                  332        6   12 024
    interpret.o             6 374      605    5 352
    io.o                      628
    list.o                    164
    main.o                    382       68
    parseTreeEntry.o          120
    port.o                    344        4        9
    portasm.o                 160
    startup_ewarm.o            30      620    1 024
    stepper.o               2 096       64        4
    symbolTableEntry.o        108
    tasks.o                 2 014       32      256
    usb_dev_serial.o        1 388       28       18
    usb_serial_structs.o               388      656
    -----------------------------------------------
    Total:                 15 188    1 815   19 343

command line: [2]
    -----------------------------------------------
    Total:

dl7M_tln.a: [3]
    XShttio.o                   8        8        8
    abort.o                     6
    cppinit.o                 152                20
    errno.o                    12                 4
    exit.o                      4
    low_level_init.o            4
    putchar.o                  40
    sprintf.o                  52
    sscanf.o                   36
    strstr.o                   44
    xassert.o                  76
    xprintftiny.o             282
    xreportassert.o           160
    xscanfsmall.o           1 284
    xsprout.o                  10
    xsscin.o                   30
    xstol.o                   134
    xstoul.o                  372
    xtls.o                      2
    -----------------------------------------------
    Total:                  2 708        8       32

dlpp7M_tl_ne.a: [4]
    cxxabi.o                   80
    -----------------------------------------------
    Total:                     80

driverlib.a: [5]
    cpu.o                      16
    gpio.o                     12
    interrupt.o               532
    sysctl.o                  132
    timer.o                   102
    udma.o                    284
    usb.o                   1 014
    -----------------------------------------------
    Total:                  2 092

m7M_tlv.a: [6]
    DblAdd.o                  232
    DblDiv.o                  582
    DblMul.o                  418
    DblSub.o                  384
    DblToFlt.o                144
    DblToI32.o                 76
    FltToDbl.o                 78
    I32ToDbl.o                 48
    expf.o                     80
    fpinit_M.o                 26
    xfdnorm.o                  38
    xfdscale.o                200
    xfexp.o                   540
    -----------------------------------------------
    Total:                  2 846

rt7M_tl.a: [7]
    ABImemcpy.o               118
    ABImemset.o               102
    cexit.o                    14
    cmain.o                    22
    cmain_call_ctors.o         32
    copy_init3.o               46
    cstart_call_dtors.o
    cstartup_M.o               12
    data_init3.o               40
    memchr.o                   88
    memcmp.o                   98
    strchr.o                   22
    strcmp.o                   66
    strlen.o                   54
    zero_init3.o               34
    -----------------------------------------------
    Total:                    748

shb_l.a: [8]
    dwrite.o                   30
    exit.o                     20
    iarttio.o                 108
    iarwrite.o                 34
    iarwstd.o                  32
    write.o                    16
    -----------------------------------------------
    Total:                    240

usblib.a: [9]
    usbbuffer.o               588
    usbdcdc.o               1 872      176       68
    usbdcdesc.o               336
    usbdconfig.o              552
    usbdenum.o              2 412               144
    usbdesc.o                  84
    usbdhandler.o              24
    usbdma.o                1 144               272
    usbmode.o                  28       16       16
    usbringbuf.o              338
    usbtick.o                 108                60
    -----------------------------------------------
    Total:                  7 486      192      560

    Gaps                       40        2
    Linker created                      43      432
---------------------------------------------------
    Grand Total:           31 428    2 060   20 367


*******************************************************************************
*** ENTRY LIST
***

Entry                      Address    Size  Type      Object
-----                      -------    ----  ----      ------
.iar.dynexit$$Base      0x20004dd8           --   Gb  - Linker created -
.iar.dynexit$$Limit     0x20004f94           --   Gb  - Linker created -
?main                   0x00007fd5          Code  Gb  cmain.o [7]
CDCTickHandler          0x00007369    0x7a  Code  Lc  usbdcdc.o [9]
CPUcpsid                0x0000513d     0x8  Code  Gb  cpu.o [5]
CPUcpsie                0x00005145     0x8  Code  Gb  cpu.o [5]
CheckForSerialStateChange
                        0x00007655    0x3a  Code  Lc  usb_dev_serial.o [1]
ControlHandler          0x0000792d    0xd8  Code  Gb  usb_dev_serial.o [1]
DMAUSBIntHandler        0x00006595    0x30  Code  Lc  usbdma.o [9]
DMAUSBIntStatusClear    0x00006587     0xe  Code  Lc  usbdma.o [9]
DMAUSBStatus            0x000068e1     0x4  Code  Lc  usbdma.o [9]
DeviceConsumedAllData   0x00006f1d    0x18  Code  Lc  usbdcdc.o [9]
DtorRecArray            0x20004dd8     0xc  Data  Lc  cppinit.o [3]
FaultISR                0x00007fa7     0x2  Code  Lc  startup_ewarm.o [1]
GPIOPinRead             0x00003c1d     0x6  Code  Gb  gpio.o [5]
GPIOPinWrite            0x00003c23     0x6  Code  Gb  gpio.o [5]
GetEPDescriptorType     0x00006b89    0x46  Code  Lc  usbdconfig.o [9]
GetEndpointFIFOSize     0x00006b6d    0x1c  Code  Lc  usbdconfig.o [9]
GetLineCoding           0x00007857    0xa4  Code  Lc  usb_dev_serial.o [1]
HandleConfigChange      0x0000717d    0x2c  Code  Lc  usbdcdc.o [9]
HandleDevice            0x000071f7    0x62  Code  Lc  usbdcdc.o [9]
HandleDisconnect        0x00007323    0x22  Code  Lc  usbdcdc.o [9]
HandleEP0Data           0x000071a9    0x46  Code  Lc  usbdcdc.o [9]
HandleEndpoints         0x0000712b    0x52  Code  Lc  usbdcdc.o [9]
HandleRequests          0x00007259    0xb8  Code  Lc  usbdcdc.o [9]
HandleResume            0x00007351     0xc  Code  Lc  usbdcdc.o [9]
HandleRxAvailable       0x00003a5d    0xb2  Code  Lc  usbbuffer.o [9]
HandleSuspend           0x00007345     0xc  Code  Lc  usbdcdc.o [9]
IntDefaultHandler       0x00007fa9     0x2  Code  Lc  startup_ewarm.o [1]
IntDisable              0x00003d3f    0x58  Code  Gb  interrupt.o [5]
IntEnable               0x00003ce7    0x58  Code  Gb  interrupt.o [5]
IntIsEnabled            0x00003d97    0x5c  Code  Gb  interrupt.o [5]
IntMasterDisable        0x00003cb5     0x6  Code  Gb  interrupt.o [5]
IntMasterEnable         0x00003cad     0x8  Code  Gb  interrupt.o [5]
IntPrioritySet          0x00003cc3    0x24  Code  Gb  interrupt.o [5]
InternalUSBRegisterTickHandler
                        0x000069cd    0x24  Code  Gb  usbtick.o [9]
InternalUSBStartOfFrameTick
                        0x000069f1    0x26  Code  Gb  usbtick.o [9]
InternalUSBTickInit     0x000069b1    0x1c  Code  Gb  usbtick.o [9]
NextConfigDescGet       0x00006a1d    0x2e  Code  Lc  usbdcdesc.o [9]
NmiSR                   0x00007fa5     0x2  Code  Lc  startup_ewarm.o [1]
ProcessDataFromHost     0x0000702f    0x5e  Code  Gb  usbdcdc.o [9]
ProcessDataToHost       0x000070d1    0x52  Code  Gb  usbdcdc.o [9]
ProcessNotificationToHost
                        0x0000709b    0x36  Code  Gb  usbdcdc.o [9]
ReadUARTData            0x0000768f    0x64  Code  Lc  usb_dev_serial.o [1]
Region$$Table$$Base     0x00007f04           --   Gb  - Linker created -
Region$$Table$$Limit    0x00007f2c           --   Gb  - Linker created -
ResetISR                0x00007f8d    0x14  Code  Gb  startup_ewarm.o [1]
RxHandler               0x00007a13    0x48  Code  Gb  usb_dev_serial.o [1]
SHT$$INIT_ARRAY$$Base   0x000081f8           --   Gb  - Linker created -
SHT$$INIT_ARRAY$$Limit  0x000081fc           --   Gb  - Linker created -
SHT$$PREINIT_ARRAY$$Base
                        0x000081f8           --   Gb  - Linker created -
SHT$$PREINIT_ARRAY$$Limit
                        0x000081f8           --   Gb  - Linker created -
ScheduleNextTransmission
                        0x000039cf    0x8e  Code  Lc  usbbuffer.o [9]
SendBreak               0x000078fb    0x32  Code  Lc  usb_dev_serial.o [1]
SendBreak               0x00006f35    0x3a  Code  Lc  usbdcdc.o [9]
SendLineCodingChange    0x00006f6f    0x1e  Code  Lc  usbdcdc.o [9]
SendLineStateChange     0x00006f8d    0x1e  Code  Lc  usbdcdc.o [9]
SendSerialState         0x00006fab    0x84  Code  Lc  usbdcdc.o [9]
SetControlLineState     0x000077ab     0x2  Code  Lc  usb_dev_serial.o [1]
SetDeferredOpFlag       0x00006f05    0x18  Code  Lc  usbdcdc.o [9]
SetLineCoding           0x000077ad    0xaa  Code  Lc  usb_dev_serial.o [1]
SysCtlPeripheralEnable  0x00003c69     0x8  Code  Gb  sysctl.o [5]
SysCtlPeripheralReset   0x00003c29    0x40  Code  Gb  sysctl.o [5]
SysCtlReset             0x00003c85     0x8  Code  Gb  sysctl.o [5]
SysCtlUSBPLLEnable      0x00003c8d     0xc  Code  Gb  sysctl.o [5]
TimerConfigure          0x0000343d    0x26  Code  Gb  timer.o [5]
TimerDisable            0x00003431     0xc  Code  Gb  timer.o [5]
TimerEnable             0x00003425     0xc  Code  Gb  timer.o [5]
TimerIntEnable          0x00003479     0x4  Code  Gb  timer.o [5]
TimerLoadSet            0x00003469    0x10  Code  Gb  timer.o [5]
TxHandler               0x00007a05     0xe  Code  Gb  usb_dev_serial.o [1]
UARTSend                0x000023ab    0x12  Code  Gb  main.o [1]
USB0DeviceIntHandler    0x00008035    0x18  Code  Gb  usbdhandler.o [9]
USBBufferDataAvailable  0x00003b83     0x6  Code  Gb  usbbuffer.o [9]
USBBufferEventCallback  0x00003b8f    0x8c  Code  Gb  usbbuffer.o [9]
USBBufferFlush          0x00003b57     0x6  Code  Gb  usbbuffer.o [9]
USBBufferInit           0x00003b0f    0x16  Code  Gb  usbbuffer.o [9]
USBBufferRead           0x00003b5d    0x26  Code  Gb  usbbuffer.o [9]
USBBufferSpaceAvailable
                        0x00003b89     0x6  Code  Gb  usbbuffer.o [9]
USBBufferWrite          0x00003b25    0x32  Code  Gb  usbbuffer.o [9]
USBDCDCCompositeInit    0x000073f9    0x8e  Code  Gb  usbdcdc.o [9]
USBDCDCInit             0x00007487    0x42  Code  Gb  usbdcdc.o [9]
USBDCDCPacketRead       0x00007525    0x7e  Code  Gb  usbdcdc.o [9]
USBDCDCPacketWrite      0x000074d9    0x4c  Code  Gb  usbdcdc.o [9]
USBDCDCRxPacketAvailable
                        0x000075b3    0x32  Code  Gb  usbdcdc.o [9]
USBDCDCSerialStateChange
                        0x000075ed    0x2e  Code  Gb  usbdcdc.o [9]
USBDCDCTxPacketAvailable
                        0x000075a3    0x10  Code  Gb  usbdcdc.o [9]
USBDCDConfigDescGet     0x00006a93    0x54  Code  Gb  usbdcdesc.o [9]
USBDCDConfigDescGetNum  0x00006a69    0x2a  Code  Gb  usbdcdesc.o [9]
USBDCDConfigDescGetSize
                        0x00006a4b    0x1e  Code  Gb  usbdcdesc.o [9]
USBDCDConfigGetInterface
                        0x00006ae7    0x4c  Code  Gb  usbdcdesc.o [9]
USBDCDConfigGetInterfaceEndpoint
                        0x00006b3b    0x32  Code  Gb  usbdcdesc.o [9]
USBDCDDeviceInfoInit    0x000057d5    0x1a  Code  Gb  usbdenum.o [9]
USBDCDInit              0x000057ef    0xb8  Code  Gb  usbdenum.o [9]
USBDCDRequestDataEP0    0x000058a7    0x10  Code  Gb  usbdenum.o [9]
USBDCDSendDataEP0       0x000058b7     0xa  Code  Gb  usbdenum.o [9]
USBDCDStallEP0          0x000058c5    0x18  Code  Gb  usbdenum.o [9]
USBDClearFeature        0x00005ad7    0x72  Code  Lc  usbdenum.o [9]
USBDEP0StateTx          0x00005e87    0x66  Code  Lc  usbdenum.o [9]
USBDEP0StateTxConfig    0x00005eed   0x13e  Code  Lc  usbdenum.o [9]
USBDGetConfiguration    0x00005cfb    0x22  Code  Lc  usbdenum.o [9]
USBDGetDescriptor       0x00005bcd   0x128  Code  Lc  usbdenum.o [9]
USBDGetInterface        0x00005db3    0x24  Code  Lc  usbdenum.o [9]
USBDGetStatus           0x00005a87    0x50  Code  Lc  usbdenum.o [9]
USBDReadAndDispatchRequest
                        0x00005927    0x56  Code  Lc  usbdenum.o [9]
USBDSetAddress          0x00005bb3    0x1a  Code  Lc  usbdenum.o [9]
USBDSetConfiguration    0x00005d2d    0x7e  Code  Lc  usbdenum.o [9]
USBDSetDescriptor       0x00005cf5     0x6  Code  Lc  usbdenum.o [9]
USBDSetFeature          0x00005b53    0x60  Code  Lc  usbdenum.o [9]
USBDSetInterface        0x00005def    0x88  Code  Lc  usbdenum.o [9]
USBDSyncFrame           0x00005e77     0x4  Code  Lc  usbdenum.o [9]
USBDescGet              0x00006ed7    0x2e  Code  Gb  usbdesc.o [9]
USBDescGetNum           0x00006eb1    0x26  Code  Gb  usbdesc.o [9]
USBDevAddrSet           0x000062d7     0x4  Code  Gb  usb.o [5]
USBDevConnect           0x000062bf     0xc  Code  Gb  usb.o [5]
USBDevDisconnect        0x000062cb     0xc  Code  Gb  usb.o [5]
USBDevEndpointConfigSet
                        0x000062db    0x74  Code  Gb  usb.o [5]
USBDevEndpointDataAck   0x0000647d    0x20  Code  Gb  usb.o [5]
USBDevEndpointStall     0x0000624f    0x30  Code  Gb  usb.o [5]
USBDevEndpointStallClear
                        0x0000627f    0x40  Code  Gb  usb.o [5]
USBDevEndpointStatusClear
                        0x00006201    0x4e  Code  Gb  usb.o [5]
USBDevMode              0x00006521     0x2  Code  Gb  usb.o [5]
USBDeviceConfig         0x00006bcf   0x136  Code  Gb  usbdconfig.o [9]
USBDeviceConfigAlternate
                        0x00006d11    0x7e  Code  Gb  usbdconfig.o [9]
USBDeviceEnumHandler    0x00005981    0xca  Code  Gb  usbdenum.o [9]
USBDeviceEnumResetHandler
                        0x00005a4b    0x3c  Code  Gb  usbdenum.o [9]
USBDeviceIntHandlerInternal
                        0x0000602b    0xc8  Code  Gb  usbdenum.o [9]
USBDeviceResumeTickHandler
                        0x000058dd    0x4a  Code  Gb  usbdenum.o [9]
USBEndpointDMAChannel   0x00006507    0x1a  Code  Gb  usb.o [5]
USBEndpointDMAConfigSet
                        0x00006391    0x48  Code  Gb  usb.o [5]
USBEndpointDMADisable   0x000063f9    0x20  Code  Gb  usb.o [5]
USBEndpointDMAEnable    0x000063d9    0x20  Code  Gb  usb.o [5]
USBEndpointDataAvail    0x00006419    0x20  Code  Gb  usb.o [5]
USBEndpointDataGet      0x00006439    0x44  Code  Gb  usb.o [5]
USBEndpointDataPut      0x0000649d    0x30  Code  Gb  usb.o [5]
USBEndpointDataSend     0x000064d3    0x2c  Code  Gb  usb.o [5]
USBEndpointPacketCountSet
                        0x00006529     0xe  Code  Gb  usb.o [5]
USBEndpointStatus       0x000061ed     0xe  Code  Gb  usb.o [5]
USBFIFOAddrGet          0x000064ff     0x8  Code  Gb  usb.o [5]
USBFIFOConfigSet        0x0000634f    0x3c  Code  Gb  usb.o [5]
USBHostResume           0x0000615b    0x14  Code  Gb  usb.o [5]
USBIndexWrite           0x00006141    0x1a  Code  Lc  usb.o [5]
USBIntEnableControl     0x0000616f    0x26  Code  Gb  usb.o [5]
USBIntEnableEndpoint    0x000061c5    0x1a  Code  Gb  usb.o [5]
USBIntStatusControl     0x00006195    0x30  Code  Gb  usb.o [5]
USBIntStatusEndpoint    0x000061df     0x6  Code  Gb  usb.o [5]
USBLibDMAInit           0x000068e5    0x84  Code  Gb  usbdma.o [9]
USBRingBufAdvanceRead   0x000050b1    0x1e  Code  Gb  usbringbuf.o [9]
USBRingBufAdvanceWrite  0x000050cf    0x36  Code  Gb  usbringbuf.o [9]
USBRingBufContigFree    0x00005063    0x1c  Code  Gb  usbringbuf.o [9]
USBRingBufContigUsed    0x00005051    0x12  Code  Gb  usbringbuf.o [9]
USBRingBufFlush         0x00005015    0x1a  Code  Gb  usbringbuf.o [9]
USBRingBufFree          0x00005043     0xe  Code  Gb  usbringbuf.o [9]
USBRingBufInit          0x0000512f     0xc  Code  Gb  usbringbuf.o [9]
USBRingBufRead          0x00005095    0x1c  Code  Gb  usbringbuf.o [9]
USBRingBufReadOne       0x0000507f    0x16  Code  Gb  usbringbuf.o [9]
USBRingBufUsed          0x0000502f    0x14  Code  Gb  usbringbuf.o [9]
USBRingBufWrite         0x00005113    0x1c  Code  Gb  usbringbuf.o [9]
USBRingBufWriteOne      0x00005105     0xe  Code  Gb  usbringbuf.o [9]
USBStackModeSet         0x00007bc1    0x18  Code  Gb  usbmode.o [9]
USBUARTIntHandler       0x00007747    0x64  Code  Gb  usb_dev_serial.o [1]
USBUARTPrimeTransmit    0x000076f3    0x54  Code  Lc  usb_dev_serial.o [1]
UpdateIndexAtomic       0x00004fe9    0x2c  Code  Lc  usbringbuf.o [9]
_GetintSmall            0x000041a9   0x230  Code  Lc  xscanfsmall.o [3]
_GetstrSmall            0x000040e9    0xc0  Code  Lc  xscanfsmall.o [3]
_PrintfTiny             0x00004a81   0x11a  Code  Gb  xprintftiny.o [3]
_SProut                 0x00002d1f     0xa  Code  Gb  xsprout.o [3]
_SScin                  0x0000280f    0x1e  Code  Gb  xsscin.o [3]
_ScanfSmall             0x00003eed   0x1f6  Code  Gb  xscanfsmall.o [3]
__aeabi_assert          0x000022eb    0x4a  Code  Gb  xassert.o [3]
__aeabi_atexit          0x00001723     0xa  Code  Gb  cxxabi.o [4]
__aeabi_d2f             0x00004cc5          Code  Gb  DblToFlt.o [6]
__aeabi_d2iz            0x00004991          Code  Gb  DblToI32.o [6]
__aeabi_dadd            0x00004e29          Code  Gb  DblAdd.o [6]
__aeabi_ddiv            0x000045c9          Code  Gb  DblDiv.o [6]
__aeabi_dmul            0x00004425          Code  Gb  DblMul.o [6]
__aeabi_dsub            0x00004811          Code  Gb  DblSub.o [6]
__aeabi_errno_addr      0x00005615     0x6  Code  Gb  errno.o [3]
__aeabi_f2d             0x00004dd9          Code  Gb  FltToDbl.o [6]
__aeabi_i2d             0x000043f5          Code  Gb  I32ToDbl.o [6]
__aeabi_memcpy          0x00004bb1          Code  Gb  ABImemcpy.o [7]
__aeabi_memcpy4         0x00004bd1          Code  Gb  ABImemcpy.o [7]
__aeabi_memcpy8         0x00004bd1          Code  Gb  ABImemcpy.o [7]
__aeabi_memset          0x00004f45          Code  Gb  ABImemset.o [7]
__aeabi_ui2d            0x00004409          Code  Gb  I32ToDbl.o [6]
__aeabi_vec_ctor_nocookie_nodtor
                        0x000016e3    0x22  Code  Gb  cxxabi.o [4]
__aeabi_vec_dtor        0x00001705    0x1e  Code  Gb  cxxabi.o [4]
__call_ctors            0x00002d29    0x18  Code  Gb  cppinit.o [3]
__call_dtors            0x00002d7b     0x2  Code  Gb  cppinit.o [3]
__cexit_call_dtors      0x00007ff7          Code  Gb  cexit.o [7]
__cmain                 0x00007fd5          Code  Gb  cmain.o [7]
__cstart_call_dtors     0x000081fc          Data  Gb  cstart_call_dtors.o [7]
__cxa_atexit            0x00002d41    0x3a  Code  Gb  cppinit.o [3]
__cxa_finalize          0x00002d7d    0x38  Code  Gb  cppinit.o [3]
__dso_handle            0x200049c8     0x4  Data  Gb  cppinit.o [3]
__dwrite                0x00005741    0x1e  Code  Gb  dwrite.o [8]
__exit                  0x00004fd5    0x14  Code  Gb  exit.o [8]
__iar_EmptyStepPoint    0x000022e9     0x2  Code  Gb  xassert.o [3]
__iar_Errno             0x200049cc     0x4  Data  Gb  errno.o [3]
__iar_FDnorm            0x0000576b    0x26  Code  Gb  xfdnorm.o [6]
__iar_FDscale           0x00005679    0xc8  Code  Gb  xfdscale.o [6]
__iar_FExp              0x0000537d   0x1ea  Code  Gb  xfexp.o [6]
__iar_Memchr            0x00005621          Code  Gb  memchr.o [7]
__iar_Memset            0x00004f45          Code  Gb  ABImemset.o [7]
__iar_Memset_word       0x00004f4d          Code  Gb  ABImemset.o [7]
__iar_ReportAssert      0x0000393f    0x50  Code  Gb  xreportassert.o [3]
__iar_Stolx             0x00005163    0x86  Code  Gb  xstol.o [3]
__iar_Stoul             0x00005307     0x4  Code  Gb  xstoul.o [3]
__iar_Stoulx            0x000051e9   0x118  Code  Gb  xstoul.o [3]
__iar_Strchr            0x0000514d          Code  Gb  strchr.o [7]
__iar_Strstr            0x00003ec1    0x2c  Code  Gb  strstr.o [3]
__iar_close_ttio        0x000055a9    0x2e  Code  Gb  iarttio.o [8]
__iar_copy_init3        0x0000236b    0x2e  Code  Gb  copy_init3.o [7]
__iar_cstart_call_ctors
                        0x00007f6d    0x20  Code  Gb  cmain_call_ctors.o [7]
__iar_d2uiz             0x000049bd          Code  Gb  DblToI32.o [6]
__iar_dadd              0x00004e3d          Code  Gb  DblAdd.o [6]
__iar_data_init3        0x00007e4d    0x28  Code  Gb  data_init3.o [7]
__iar_dlib_perthread_access
                        0x00005769     0x2  Code  Gb  xtls.o [3]
__iar_dsub              0x00004825          Code  Gb  DblSub.o [6]
__iar_dsubStart         0x00004837          Code  Gb  DblSub.o [6]
__iar_get_ttio          0x000055d9    0x38  Code  Gb  iarttio.o [8]
__iar_init_vfp          0x00007fb9          Code  Gb  fpinit_M.o [6]
__iar_lookup_ttioh      0x00005761     0x8  Code  Gb  XShttio.o [3]
__iar_program_start     0x00007fab          Code  Gb  cstartup_M.o [7]
__iar_sh_stdout         0x00005791    0x20  Code  Gb  iarwstd.o [8]
__iar_sh_write          0x000057b1    0x22  Code  Gb  iarwrite.o [8]
__iar_strcmp            0x00002539          Code  Gb  strcmp.o [7]
__iar_ttio_handles      0x200000b4     0x8  Data  Lc  XShttio.o [3]
__iar_ui2d              0x0000440d          Code  Gb  I32ToDbl.o [6]
__iar_zero_init3        0x00002517    0x22  Code  Gb  zero_init3.o [7]
__low_level_init        0x00007feb     0x4  Code  Gb  low_level_init.o [3]
__sti__routine          0x0000026d    0x18  Code  Lc  interpret.o [1]
__vector_table          0x00000000   0x26c  Data  Gb  startup_ewarm.o [1]
__write                 0x00005599    0x10  Code  Gb  write.o [8]
_call_main              0x00007fe1          Code  Gb  cmain.o [7]
_exit                   0x00007ff5          Code  Gb  cexit.o [7]
_main                   0x00007fe7          Code  Gb  cmain.o [7]
abort                   0x000039c9     0x6  Code  Gb  abort.o [3]
accel::RPMx10k(unsigned int, unsigned int)
                        0x00004a4f    0x26  Code  Gb  interpret.o [1]
accel::_RPMx10ktoFreq(unsigned int)
                        0x00005369     0xe  Code  Gb  interpret.o [1]
accel::_accelStepMicroSec() const
                        0x00004da5    0x18  Code  Gb  stepper.o [1]
accel::_initUnitCurve(int)
                        0x00002f17    0x7e  Code  Gb  accel.o [1]
accel::_scaleYAxisToClockTicks()
                        0x00003041    0x38  Code  Gb  accel.o [1]
accel::_scaleYAxisToFrequency()
                        0x00002f95    0xaa  Code  Gb  accel.o [1]
accel::accel()          0x00002dc1    0x2e  Code  Gb  accel.o [1]
accel::accelMicroSec() const
                        0x000030f5     0x6  Code  Gb  stepper.o [1]
accel::accelMicroSec(unsigned int)
                        0x0000349d    0x28  Code  Gb  stepper.o [1]
accel::assign(const accel&)
                        0x00002e05    0x62  Code  Gb  accel.o [1]
accel::clockTicksToCurveIndex(unsigned int) const
                        0x00004c33    0x18  Code  Gb  stepper.o [1]
accel::clockTicksToFreq(unsigned int) const
                        0x000033e7    0x18  Code  Gb  stepper.o [1]
accel::clockTicksToMicroSec(unsigned int) const
                        0x0000316d    0x26  Code  Gb  stepper.o [1]
accel::curveIndexToClockTicks(unsigned int) const
                        0x00003145    0x28  Code  Gb  stepper.o [1]
accel::curveIndexToClockTicks(unsigned int) const::string
                        0x00008004    0x18  Data  Gb  stepper.o [1]
accel::curveIndexToClockTicks(unsigned int) const::string (instance 2)
                        0x00007e24    0x28  Data  Gb  stepper.o [1]
accel::degreesPerMicrostepx10k() const
                        0x00005377     0x6  Code  Gb  interpret.o [1]
accel::degreesPerMicrostepx10k(unsigned int)
                        0x00004f3d     0x6  Code  Gb  stepper.o [1]
accel::fmax() const     0x00004c27     0x6  Code  Gb  accel.o [1]
accel::fmin() const     0x000031ad     0x6  Code  Gb  stepper.o [1]
accel::freqCloseToStop(unsigned int) const
                        0x000033ff    0x12  Code  Gb  stepper.o [1]
accel::freqToClockTicks(unsigned int) const
                        0x00004f11    0x2c  Code  Gb  stepper.o [1]
accel::frequency(unsigned int, unsigned int)
                        0x00003091    0x34  Code  Gb  accel.o [1]
accel::microSecToClockTicks(unsigned int) const
                        0x00004dbd    0x1a  Code  Gb  stepper.o [1]
accel::microSecToCurveIndex(unsigned int) const
                        0x0000311d    0x26  Code  Gb  stepper.o [1]
accel::microSecToFreq(unsigned int) const
                        0x00003195    0x18  Code  Gb  stepper.o [1]
accel::microSecToSteps(unsigned int)
                        0x00002e67    0x58  Code  Gb  accel.o [1]
accel::operator =(const accel&)
                        0x00002def    0x16  Code  Gb  accel.o [1]
accel::reset(unsigned int)
                        0x000030fb    0x22  Code  Gb  stepper.o [1]
accel::stepsToMicroSec(unsigned int)
                        0x00002ebf    0x58  Code  Gb  accel.o [1]
accel::totalClockTicks() const
                        0x00004c2d     0x6  Code  Gb  accel.o [1]
accel::totalClockTicksToCurrentClockTicks(unsigned int)
                        0x00004c4d    0x78  Code  Gb  stepper.o [1]
accel::updateClockPeriod()
                        0x00003223    0x28  Code  Gb  stepper.o [1]
accel::updateClockPeriodDecelerate()
                        0x000032b1    0xe8  Code  Gb  stepper.o [1]
accel::~accel()         0x00007cc7     0x2  Code  Gb  interpret.o [1]
bufferInput             0x00000553   0x2aa  Code  Gb  interpret.o [1]
delay                   0x000023bd    0x1c  Code  Gb  main.o [1]
digits                  0x0000530c    0x28  Data  Lc  xstoul.o [3]
enable                  0x000023d9     0xe  Code  Gb  main.o [1]
errMsg()                0x0000037d    0x1a  Code  Gb  interpret.o [1]
exit                    0x00007fef     0x4  Code  Gb  exit.o [3]
expf                    0x00004d55    0x4c  Code  Gb  expf.o [6]
flashLED                0x00002407     0x2  Code  Gb  main.o [1]
flashio::_eraseBlockRequired(unsigned int, unsigned int *, unsigned long)
                        0x0000279f    0x3a  Code  Gb  flashio.o [1]
flashio::_flashErased(unsigned int)
                        0x000027d9    0x28  Code  Gb  flashio.o [1]
flashio::flashio()      0x000026f9     0x2  Code  Gb  flashio.o [1]
flashio::retrieveData(unsigned int *, unsigned int, unsigned long)
                        0x00002785    0x1a  Code  Gb  flashio.o [1]
flashio::saveData(unsigned int *, unsigned int, unsigned long)
                        0x000026fb    0x86  Code  Gb  flashio.o [1]
flashio::~flashio()     0x00007cc5     0x2  Code  Gb  interpret.o [1]
g_bSendingBreak         0x200049d4     0x1  Data  Lc  usb_dev_serial.o [1]
g_bUSBConfigured        0x200049d5     0x1  Data  Lc  usb_dev_serial.o [1]
g_bUSBTimerInitialized  0x200047f8     0x1  Data  Gb  usbtick.o [9]
g_eOTGModeState         0x20000091     0x1  Data  Gb  usbmode.o [9]
g_iDualMode             0x20000092     0x1  Data  Lc  usbmode.o [9]
g_iUSBMode              0x20000090     0x1  Data  Gb  usbmode.o [9]
g_pCDCCompSerConfigDescriptors
                        0x00007620     0x4  Data  Gb  usbdcdc.o [9]
g_pcStatus              0x200049bc     0x4  Data  Gb  usb_dev_serial.o [1]
g_pfnTickHandlers       0x200047fc    0x18  Data  Gb  usbtick.o [9]
g_pfnUSBModeCallback    0x2000009c     0x4  Data  Lc  usbmode.o [9]
g_ppCDCSerConfigDescriptors
                        0x0000761c     0x4  Data  Gb  usbdcdc.o [9]
g_ppsDevInfo            0x200047b0     0x4  Data  Gb  usbdenum.o [9]
g_ppui8StringDescriptors
                        0x0000801c    0x18  Data  Gb  usb_serial_structs.o [1]
g_psCDCCompSerSections  0x20000080    0x10  Data  Gb  usbdcdc.o [9]
g_psCDCSerSections      0x200000a0     0xc  Data  Gb  usbdcdc.o [9]
g_psDCDInst             0x20004768    0x48  Data  Gb  usbdenum.o [9]
g_psUSBDMAInst          0x200042ec   0x110  Data  Lc  usbdma.o [9]
g_psUSBDStdRequests     0x0000610c    0x34  Data  Lc  usbdenum.o [9]
g_pui32Dii16Regs        0x00003eac    0x14  Data  Lc  interrupt.o [5]
g_pui32EnRegs           0x00003e98    0x14  Data  Lc  interrupt.o [5]
g_pui32Regs             0x00003dfc    0x9c  Data  Lc  interrupt.o [5]
g_pui8CDCSerCommInterface
                        0x00007bec    0x24  Data  Gb  usbdcdc.o [9]
g_pui8CDCSerDataInterface
                        0x00007c18    0x18  Data  Gb  usbdcdc.o [9]
g_pui8CDCSerDescriptor  0x20000060     0xc  Data  Gb  usbdcdc.o [9]
g_pui8CDCSerDeviceDescriptor
                        0x2000006c    0x14  Data  Gb  usbdcdc.o [9]
g_pui8ConfigString      0x00007d10    0x38  Data  Gb  usb_serial_structs.o [1]
g_pui8ControlInterfaceString
                        0x00007dd0    0x2c  Data  Gb  usb_serial_structs.o [1]
g_pui8DataBufferIn      0x200047b8    0x40  Data  Lc  usbdenum.o [9]
g_pui8IADSerDescriptor  0x200000ac     0x8  Data  Gb  usbdcdc.o [9]
g_pui8LangDescriptor    0x000081f4     0x4  Data  Gb  usb_serial_structs.o [1]
g_pui8ManufacturerString
                        0x00007e74    0x24  Data  Gb  usb_serial_structs.o [1]
g_pui8ProductString     0x00007e98    0x24  Data  Gb  usb_serial_structs.o [1]
g_pui8RxBufferWorkspace
                        0x20004890    0x18  Data  Gb  usb_serial_structs.o [1]
g_pui8SerialNumberString
                        0x00008060    0x14  Data  Gb  usb_serial_structs.o [1]
g_pui8TxBufferWorkspace
                        0x200048a8    0x18  Data  Gb  usb_serial_structs.o [1]
g_pui8USBRxBuffer       0x20004504   0x100  Data  Gb  usb_serial_structs.o [1]
g_pui8USBTxBuffer       0x20004604   0x100  Data  Gb  usb_serial_structs.o [1]
g_pvTickInstance        0x20004814    0x18  Data  Gb  usbtick.o [9]
g_sCDCCompSerConfigHeader
                        0x00007c40     0x8  Data  Gb  usbdcdc.o [9]
g_sCDCDevice            0x20000000    0x60  Data  Gb  usb_serial_structs.o [1]
g_sCDCHandlers          0x00007624    0x30  Data  Gb  usbdcdc.o [9]
g_sCDCSerCommInterfaceSection
                        0x00007c10     0x8  Data  Gb  usbdcdc.o [9]
g_sCDCSerConfigHeader   0x00007c38     0x8  Data  Gb  usbdcdc.o [9]
g_sCDCSerConfigSection  0x00007bdc     0x8  Data  Gb  usbdcdc.o [9]
g_sCDCSerDataInterfaceSection
                        0x00007c30     0x8  Data  Gb  usbdcdc.o [9]
g_sIADSerConfigSection  0x00007be4     0x8  Data  Gb  usbdcdc.o [9]
g_sRxBuffer             0x00007ebc    0x24  Data  Gb  usb_serial_structs.o [1]
g_sTxBuffer             0x00007ee0    0x24  Data  Gb  usb_serial_structs.o [1]
g_ui32CurrentUSBTick    0x2000482c     0x4  Data  Gb  usbtick.o [9]
g_ui32Flags             0x200049b8     0x4  Data  Gb  usb_dev_serial.o [1]
g_ui32PollRate          0x20000094     0x4  Data  Gb  usbmode.o [9]
g_ui32UARTRxCount       0x200049b4     0x4  Data  Gb  usb_dev_serial.o [1]
g_ui32UARTTxCount       0x200049b0     0x4  Data  Gb  usb_dev_serial.o [1]
g_ui32USBSOFCount       0x200049c0     0x4  Data  Gb  usbtick.o [9]
g_ui32WaitTicks         0x20000098     0x4  Data  Gb  usbmode.o [9]
globalInterpretState    0x200000d0     0x1  Data  Lc  interpret.o [1]
heapSTRUCT_SIZE         0x00003142     0x2  Data  Lc  heap_2.o [1]
intToNodeType(int)      0x000004f1    0x62  Code  Gb  interpret.o [1]
interpret::_cleanUpEvaluationStack(unsigned int)
                        0x00000f99    0x34  Code  Gb  interpret.o [1]
interpret::_cleanUpSymbolTable()
                        0x00000fcd    0x28  Code  Gb  interpret.o [1]
interpret::_currentProgramNodeLevel() const
                        0x00002c7b    0x16  Code  Gb  interpret.o [1]
interpret::_currentProgramNodeType() const
                        0x00002acf    0x16  Code  Gb  interpret.o [1]
interpret::_currentProgramNodeValue() const
                        0x00002ae5    0x16  Code  Gb  interpret.o [1]
interpret::_evalValue()
                        0x00002b49    0x3c  Code  Gb  interpret.o [1]
interpret::_evalValue()::string
                        0x00007f2c    0x20  Data  Gb  interpret.o [1]
interpret::_evalValue()::string (instance 2)
                        0x00007d78    0x2c  Data  Gb  interpret.o [1]
interpret::_evalValuePeek() const
                        0x00002c91     0xe  Code  Gb  interpret.o [1]
interpret::_findFirstAvailableNodeInSymbolTable()
                        0x00001531    0x64  Code  Gb  interpret.o [1]
interpret::_findFirstParseTreeEntry(parseTreeEntry const &, unsigned int)
                        0x00000ff5    0x74  Code  Gb  interpret.o [1]
interpret::_getIntSize(flashRegion)
                        0x000016b9    0x2a  Code  Gb  interpret.o [1]
interpret::_getLastSymbolTableIndex()
                        0x00002cc7    0x16  Code  Gb  interpret.o [1]
interpret::_programNodeType(unsigned int) const
                        0x00002ce1    0x14  Code  Gb  interpret.o [1]
interpret::_pushTemporarySymbolOnEvaluationStack(unsigned int)
                        0x00001495    0x94  Code  Gb  interpret.o [1]
interpret::_resetSymbolTableTemporaryBoundary()
                        0x00002c71     0xa  Code  Gb  interpret.o [1]
interpret::_returnSymbolToAvailablePool(unsigned int)
                        0x00002b85    0x26  Code  Gb  interpret.o [1]
interpret::_updateProgramIndex(nodeType, int)
                        0x00000f05    0x5c  Code  Gb  interpret.o [1]
interpret::appendToProgram(parseTreeEntry const &)
                        0x00000875    0x46  Code  Gb  interpret.o [1]
interpret::appendToSymbolTable(symbolTableEntry const &)
                        0x000008bb    0x2e  Code  Gb  interpret.o [1]
interpret::evaluateOperator(unsigned int)
                        0x00001141   0x348  Code  Gb  interpret.o [1]
interpret::getLowWaterMarkForTemporarySymbolSearch() const
                        0x00002d19     0x6  Code  Gb  interpret.o [1]
interpret::getStepper()
                        0x00001733     0x6  Code  Gb  interpret.o [1]
interpret::interpret()  0x000007fd    0x6e  Code  Gb  interpret.o [1]
interpret::restoreFromFlash(flashRegion)
                        0x00001603    0x70  Code  Gb  interpret.o [1]
interpret::run(int)     0x000008e9   0x60e  Code  Gb  interpret.o [1]
interpret::saveToFlash(flashRegion)
                        0x0000159d    0x66  Code  Gb  interpret.o [1]
interpret::setLowWaterMarkForTemporarySymbolSearch()
                        0x000026ed     0xc  Code  Gb  interpret.o [1]
interpret::symbolFromIndex(int)
                        0x00002cfd    0x1c  Code  Gb  interpret.o [1]
interpret::symbolTableIndexMorph(int)
                        0x00001069    0x70  Code  Gb  interpret.o [1]
interpret::~interpret()
                        0x00007c49    0x54  Code  Gb  interpret.o [1]
interpretState          0x00000285    0xde  Code  Gb  interpret.o [1]
interpreter             0x20002fb4  0x1338  Data  Gb  interpret.o [1]
io::getADC(unsigned int)
                        0x000029bb    0x4c  Code  Gb  io.o [1]
io::getInput() const    0x0000297d    0x3e  Code  Gb  io.o [1]
io::getTemperature()    0x00002a07    0x66  Code  Gb  io.o [1]
io::init()              0x0000282f   0x110  Code  Gb  io.o [1]
io::io()                0x0000282d     0x2  Code  Gb  io.o [1]
io::reset()             0x00002c67     0xa  Code  Gb  interpret.o [1]
io::setOutput(unsigned int)
                        0x0000293f    0x3e  Code  Gb  io.o [1]
io::~io()               0x00007cab     0x2  Code  Gb  interpret.o [1]
led::Off()              0x000049f9    0x1c  Code  Gb  interpret.o [1]
led::On()               0x000049dd    0x1c  Code  Gb  interpret.o [1]
led::_enable            0x200049d0     0x1  Data  Gb  interpret.o [1]
led::enable()           0x0000535d     0xc  Code  Gb  interpret.o [1]
led::enable(bool)       0x00001b15     0xc  Code  Gb  interpret.o [1]
led::led(bool)          0x00002aa1    0x1e  Code  Gb  interpret.o [1]
led::set(unsigned int)  0x00002bc9    0x1a  Code  Gb  interpret.o [1]
led::~led()             0x00007c9d     0xe  Code  Gb  interpret.o [1]
localAssert             0x00002399    0x12  Code  Gb  main.o [1]
main                    0x00007a5b   0x106  Code  Gb  usb_dev_serial.o [1]
mainA                   0x00002441    0x1a  Code  Gb  main.o [1]
memchr                  0x00005621          Code  Gb  memchr.o [7]
memcmp                  0x00003761          Code  Gb  memcmp.o [7]
memset                  0x00003911    0x16  Code  Gb  tasks.o [1]
motorStep               0x000023e7    0x20  Code  Gb  main.o [1]
ndigs                   0x00005334    0x28  Data  Lc  xstoul.o [3]
next_abi_dtor_rec       0x200049c4     0x4  Data  Lc  cppinit.o [3]
out                     0x00003929    0x16  Code  Lc  xreportassert.o [3]
pStepper                0x20004978     0x4  Data  Gb  stepper.o [1]
parseTreeEntry::level() const
                        0x00002cf5     0x4  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::level(unsigned int)
                        0x00002679     0x4  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::operator =(const parseTreeEntry&)
                        0x0000262f    0x4a  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::parseTreeEntry()
                        0x00002621     0x6  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::parseTreeEntry(nodeType, int, unsigned int)
                        0x00002627     0x8  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::position() const
                        0x000043f1     0x4  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::position(nodePosition)
                        0x0000267d     0x4  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::type() const
                        0x00002acb     0x4  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::type(nodeType)
                        0x00002685     0x4  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::value() const
                        0x00002cf9     0x4  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::value(int)
                        0x00002681     0x4  Code  Gb  parseTreeEntry.o [1]
parseTreeEntry::~parseTreeEntry()
                        0x00002689     0x2  Code  Gb  interpret.o [1]
postMsg(bool)           0x00000397    0x16  Code  Gb  interpret.o [1]
prvAddCurrentTaskToDelayedList
                        0x000021c9    0x3e  Code  Lc  tasks.o [1]
prvAllocateTCBAndStack  0x00002215    0x46  Code  Lc  tasks.o [1]
prvCheckTasksWaitingTermination
                        0x00002161    0x5c  Code  Lc  tasks.o [1]
prvDeleteTCB            0x00002293    0x12  Code  Lc  tasks.o [1]
prvHeapInit             0x000038cb    0x2e  Code  Lc  heap_2.o [1]
prvIdleTask             0x000020ad     0x8  Code  Lc  tasks.o [1]
prvInitialiseTCBVariables
                        0x000020b5    0x60  Code  Lc  tasks.o [1]
prvInitialiseTaskLists  0x00002115    0x46  Code  Lc  tasks.o [1]
prvTaskCheckFreeStackSpace
                        0x0000225b    0x18  Code  Lc  tasks.o [1]
pui32Stack              0x200049d8   0x400  Data  Lc  startup_ewarm.o [1]
putchar                 0x00004fab    0x28  Code  Gb  putchar.o [3]
pvPortMalloc            0x000037c5    0xc2  Code  Gb  heap_2.o [1]
pxCurrentTCB            0x2000497c     0x4  Data  Gb  tasks.o [1]
pxDelayedTaskList       0x20004980     0x4  Data  Lc  tasks.o [1]
pxOverflowDelayedTaskList
                        0x20004984     0x4  Data  Lc  tasks.o [1]
pxPortInitialiseStack   0x000034c5    0x22  Code  Gb  port.o [1]
pxReadyTasksLists       0x20004704    0x64  Data  Lc  tasks.o [1]
sprintf                 0x00002c2d    0x34  Code  Gb  sprintf.o [3]
sscanf                  0x000025fd    0x24  Code  Gb  sscanf.o [3]
stepper::RPM(unsigned int, unsigned int)
                        0x00001af5    0x20  Code  Gb  interpret.o [1]
stepper::RPMx10k(unsigned int, unsigned int)
                        0x00002be3    0x14  Code  Gb  interpret.o [1]
stepper::_isAccelerating() const
                        0x000031f1    0x32  Code  Gb  stepper.o [1]
stepper::_isConstantVelocity() const
                        0x00003269    0x32  Code  Gb  stepper.o [1]
stepper::_isConstantVelocityStart() const
                        0x000033cb    0x16  Code  Gb  stepper.o [1]
stepper::_isDecelerating() const
                        0x00003399    0x32  Code  Gb  stepper.o [1]
stepper::_isStartOfDeceleration() const
                        0x0000329b    0x16  Code  Gb  stepper.o [1]
stepper::_timer() const
                        0x000033e1     0x6  Code  Gb  stepper.o [1]
stepper::_timer(unsigned long)
                        0x0000324d    0x1c  Code  Gb  stepper.o [1]
stepper::_timerStart(bool)
                        0x00001a23    0x4a  Code  Gb  stepper.o [1]
stepper::accelerationTimeMicrosecs(unsigned int)
                        0x00001ae5    0x10  Code  Gb  interpret.o [1]
stepper::degreesPerMicrostepx10k() const
                        0x00004a75     0xc  Code  Gb  interpret.o [1]
stepper::degreesPerMicrostepx10k(unsigned int)
                        0x0000348b    0x10  Code  Gb  stepper.o [1]
stepper::directionPositive(bool)
                        0x000030c5    0x30  Code  Gb  stepper.o [1]
stepper::enable()       0x00003411    0x14  Code  Gb  stepper.o [1]
stepper::isr()          0x0000191f   0x104  Code  Gb  stepper.o [1]
stepper::microstepSet(microsteps)
                        0x00001a91    0x54  Code  Gb  stepper.o [1]
stepper::moveAbsolute(int)
                        0x000017cf   0x150  Code  Gb  stepper.o [1]
stepper::moveAbsoluteDegreex10k(int)
                        0x00002bf7    0x18  Code  Gb  interpret.o [1]
stepper::moveRelative(int)
                        0x00002bb5    0x14  Code  Gb  interpret.o [1]
stepper::moveRelativeDegreex10k(int)
                        0x00002c0f    0x18  Code  Gb  interpret.o [1]
stepper::positionSteps() const
                        0x00002c61     0x6  Code  Gb  interpret.o [1]
stepper::state() const  0x00002c27     0x6  Code  Gb  interpret.o [1]
stepper::step()         0x000031b5    0x3c  Code  Gb  stepper.o [1]
stepper::stepper()      0x00001761    0x2e  Code  Gb  stepper.o [1]
stepper::~stepper()     0x00007cad    0x16  Code  Gb  interpret.o [1]
stepperISR              0x00001739    0x28  Code  Gb  stepper.o [1]
stepper_init            0x0000178f    0x40  Code  Gb  stepper.o [1]
stmtNestingLevel        0x2000495c     0x4  Data  Lc  interpret.o [1]
stmtPosition            0x20004830    0x20  Data  Lc  interpret.o [1]
stmtType                0x20004850    0x20  Data  Lc  interpret.o [1]
stmtValue               0x20004960     0x4  Data  Lc  interpret.o [1]
strchr                  0x0000514d          Code  Gb  strchr.o [7]
strcmp                  0x00002539          Code  Gb  strcmp.o [7]
stringToNodePosition(char const *)
                        0x000003ad    0x2c  Code  Gb  interpret.o [1]
stringToNodeType(char const *)
                        0x000003d9   0x114  Code  Gb  interpret.o [1]
strlen                  0x00002335          Code  Gb  strlen.o [7]
strstr(char const *, char const *)
                        0x000025ed    0x10  Code  Gb  interpret.o [1]
successMsg()            0x00000363    0x1a  Code  Gb  interpret.o [1]
symbFcnLink             0x2000496c     0x4  Data  Lc  interpret.o [1]
symbType                0x20004964     0x4  Data  Lc  interpret.o [1]
symbValue               0x20004968     0x4  Data  Lc  interpret.o [1]
symbolTableEntry::dumpEntry()
                        0x000026dd     0x2  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::fcnLink() const
                        0x00002bb1     0x4  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::fcnLink(int)
                        0x000026e7     0x4  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::operator =(const symbolTableEntry&)
                        0x000026a3    0x3a  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::symbolTableEntry()
                        0x0000268b     0xe  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::symbolTableEntry(nodeType, int)
                        0x00002699     0xa  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::type() const
                        0x00002cdd     0x4  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::type(nodeType)
                        0x000026df     0x4  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::value() const
                        0x00002b35     0x4  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::value(int)
                        0x000026e3     0x4  Code  Gb  symbolTableEntry.o [1]
symbolTableEntry::~symbolTableEntry()
                        0x000026eb     0x2  Code  Gb  interpret.o [1]
tempBuf                 0x20004870    0x20  Data  Lc  interpret.o [1]
tickCount               0x20004954     0x4  Data  Lc  interpret.o [1]
tinyQueue<int>::clear()
                        0x00002abf     0xc  Code  Gb  interpret.o [1]
tinyQueue<int>::empty() const
                        0x00004b9b    0x16  Code  Gb  interpret.o [1]
tinyQueue<int>::front() const
                        0x00002b3f     0xa  Code  Gb  interpret.o [1]
tinyQueue<int>::peekAtIndex(unsigned int) const
                        0x00002b2f     0x6  Code  Gb  interpret.o [1]
tinyQueue<int>::pop_front()
                        0x00002c9f    0x28  Code  Gb  interpret.o [1]
tinyQueue<int>::push_front(int)
                        0x00002afb    0x34  Code  Gb  interpret.o [1]
tinyQueue<int>::size() const
                        0x00004a3f    0x10  Code  Gb  interpret.o [1]
tinyQueue<int>::spaceAvail() const
                        0x00004a15    0x2a  Code  Gb  interpret.o [1]
tinyQueue<int>::stackFrameIndex() const
                        0x00002bab     0x6  Code  Gb  interpret.o [1]
tinyQueue<int>::stackFrameIndex(unsigned int)
                        0x00002b39     0x6  Code  Gb  interpret.o [1]
tinyQueue<int>::tinyQueue()
                        0x00002801     0xe  Code  Gb  interpret.o [1]
tinyQueue<int>::~tinyQueue()
                        0x00007cc3     0x2  Code  Gb  interpret.o [1]
tinyQueue<unsigned char>::clear()
                        0x000025df     0xc  Code  Gb  interpret.o [1]
tinyQueue<unsigned char>::getBuffer()
                        0x000025eb     0x2  Code  Gb  interpret.o [1]
tinyQueue<unsigned char>::push(unsigned char)
                        0x00002585    0x30  Code  Gb  interpret.o [1]
tinyQueue<unsigned char>::spaceAvail() const
                        0x000025b5    0x2a  Code  Gb  interpret.o [1]
tinyQueue<unsigned char>::tinyQueue(int)
                        0x0000257b     0xa  Code  Gb  interpret.o [1]
tinyQueue<unsigned char>::~tinyQueue()
                        0x00003193     0x2  Code  Gb  interpret.o [1]
uDMAChannelAttributeDisable
                        0x00006db5    0x26  Code  Gb  udma.o [5]
uDMAChannelControlSet   0x00006ddb    0x18  Code  Gb  udma.o [5]
uDMAChannelDisable      0x00006da5    0x10  Code  Gb  udma.o [5]
uDMAChannelEnable       0x00006d95    0x10  Code  Gb  udma.o [5]
uDMAChannelModeGet      0x00006e71    0x28  Code  Gb  udma.o [5]
uDMAChannelTransferSet  0x00006df3    0x7e  Code  Gb  udma.o [5]
uDMAUSBArbSizeSet       0x00006879    0x60  Code  Lc  usbdma.o [9]
uDMAUSBChannelAllocate  0x0000672f    0xa6  Code  Lc  usbdma.o [9]
uDMAUSBChannelDisable   0x00006617    0x46  Code  Lc  usbdma.o [9]
uDMAUSBChannelEnable    0x000065c5    0x52  Code  Lc  usbdma.o [9]
uDMAUSBChannelIntDisable
                        0x0000666b     0x2  Code  Lc  usbdma.o [9]
uDMAUSBChannelIntEnable
                        0x00006669     0x2  Code  Lc  usbdma.o [9]
uDMAUSBChannelRelease   0x000067d5    0x5a  Code  Lc  usbdma.o [9]
uDMAUSBChannelStatus    0x00006539    0x24  Code  Lc  usbdma.o [9]
uDMAUSBIntStatus        0x0000655d    0x2a  Code  Lc  usbdma.o [9]
uDMAUSBTransfer         0x0000666d    0xa6  Code  Lc  usbdma.o [9]
uDMAUSBUnitSizeSet      0x0000682f    0x4a  Code  Lc  usbdma.o [9]
ucHeap                  0x200000d4  0x2ee0  Data  Lc  heap_2.o [1]
ucMaxSysCallPriority    0x200049d3     0x1  Data  Lc  port.o [1]
ulMaxPRIGROUPValue      0x20004974     0x4  Data  Lc  port.o [1]
ulPortSetInterruptMask  0x0000370b          Code  Gb  portasm.o [1]
uxCriticalNesting       0x200000c8     0x4  Data  Lc  port.o [1]
uxCurrentNumberOfTasks  0x2000498c     0x4  Data  Lc  tasks.o [1]
uxListRemove            0x00003697    0x2a  Code  Gb  list.o [1]
uxPendedTicks           0x200049a0     0x4  Data  Lc  tasks.o [1]
uxSchedulerSuspended    0x2000499c     0x4  Data  Lc  tasks.o [1]
uxTaskGetStackHighWaterMark
                        0x00002273    0x20  Code  Gb  tasks.o [1]
uxTaskNumber            0x200049ac     0x4  Data  Lc  tasks.o [1]
uxTasksDeleted          0x20004988     0x4  Data  Lc  tasks.o [1]
uxTopReadyPriority      0x20004994     0x4  Data  Lc  tasks.o [1]
vApplicationStackOverflowHook
                        0x00002515     0x2  Code  Gb  main.o [1]
vApplicationTickHook    0x00002513     0x2  Code  Gb  main.o [1]
vIdleTask               0x00002481    0x28  Code  Lc  main.o [1]
vInterpretTask          0x000024f9    0x1a  Code  Lc  main.o [1]
vListInitialise         0x0000361d    0x1e  Code  Gb  list.o [1]
vListInitialiseItem     0x0000363b     0x6  Code  Gb  list.o [1]
vListInsert             0x0000365b    0x3c  Code  Gb  list.o [1]
vListInsertEnd          0x00003641    0x1a  Code  Gb  list.o [1]
vPortClearInterruptMask
                        0x00003719          Code  Gb  portasm.o [1]
vPortEnableVFP          0x00003745          Code  Gb  portasm.o [1]
vPortEnterCritical      0x00003591    0x1a  Code  Gb  port.o [1]
vPortExitCritical       0x000035ab    0x1c  Code  Gb  port.o [1]
vPortFree               0x00003887    0x44  Code  Gb  heap_2.o [1]
vPortSVCHandler         0x0000371f          Code  Gb  portasm.o [1]
vPortSetupTimerInterrupt
                        0x000035e7    0x10  Code  Wk  port.o [1]
vPortStartFirstTask     0x00003737          Code  Gb  portasm.o [1]
vPortYield              0x0000357f    0x12  Code  Gb  port.o [1]
vSetupHighFrequencyTimer
                        0x00002409    0x38  Code  Gb  main.o [1]
vStartIdleTask          0x0000245b    0x22  Code  Gb  main.o [1]
vStartInterpretTask     0x000024a9    0x24  Code  Gb  main.o [1]
vTaskDelay              0x00001ce9    0x3c  Code  Gb  tasks.o [1]
vTaskDelayUntil         0x00001c69    0x80  Code  Gb  tasks.o [1]
vTaskStartScheduler     0x00001d25    0x4c  Code  Gb  tasks.o [1]
vTaskSuspendAll         0x00001d71    0x10  Code  Gb  tasks.o [1]
vTaskSwitchContext      0x00001fe5    0xc6  Code  Gb  tasks.o [1]
xDelayedTaskList1       0x200048c0    0x14  Data  Lc  tasks.o [1]
xDelayedTaskList2       0x200048d4    0x14  Data  Lc  tasks.o [1]
xEnd                    0x2000493c     0x8  Data  Lc  heap_2.o [1]
xFreeBytesRemaining     0x200000bc     0x4  Data  Lc  heap_2.o [1]
xNextTaskUnblockTime    0x200000cc     0x4  Data  Lc  tasks.o [1]
xNumOfOverflows         0x200049a8     0x4  Data  Lc  tasks.o [1]
xPendingReadyList       0x200048e8    0x14  Data  Lc  tasks.o [1]
xPortPendSVHandler      0x000036c1          Code  Gb  portasm.o [1]
xPortStartScheduler     0x000034e7    0x98  Code  Gb  port.o [1]
xPortSysTickHandler     0x000035c7    0x20  Code  Gb  port.o [1]
xSchedulerRunning       0x20004998     0x4  Data  Lc  tasks.o [1]
xStart                  0x20004934     0x8  Data  Lc  heap_2.o [1]
xSuspendedTaskList      0x20004910    0x14  Data  Lc  tasks.o [1]
xTaskGenericCreate      0x00001b21   0x148  Code  Gb  tasks.o [1]
xTaskGetTickCount       0x00001e6f    0x16  Code  Gb  tasks.o [1]
xTaskIdleWaitCurrentTime
                        0x20004950     0x4  Data  Lc  interpret.o [1]
xTaskIdleWaitStartTime  0x2000494c     0x4  Data  Lc  interpret.o [1]
xTaskIncrementTick      0x00001e85   0x160  Code  Gb  tasks.o [1]
xTaskResumeAll          0x00001d81    0xee  Code  Gb  tasks.o [1]
xTaskWakeTime           0x20004948     0x4  Data  Lc  interpret.o [1]
xTasksWaitingTermination
                        0x200048fc    0x14  Data  Lc  tasks.o [1]
xTickCount              0x20004990     0x4  Data  Lc  tasks.o [1]
xYieldPending           0x200049a4     0x4  Data  Lc  tasks.o [1]


[1] = C:\dev\docs\scottdesign\motor\Debug\Obj
[2] = command line
[3] = dl7M_tln.a
[4] = dlpp7M_tl_ne.a
[5] = driverlib.a
[6] = m7M_tlv.a
[7] = rt7M_tl.a
[8] = shb_l.a
[9] = usblib.a

  31 428 bytes of readonly  code memory
   2 060 bytes of readonly  data memory
  20 367 bytes of readwrite data memory

Errors: none
Warnings: none
